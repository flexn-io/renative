{
  "$ref": "#/definitions/renative-1.0.schema",
  "definitions": {
    "zodRuntime": {
      "description": "This object will be automatically injected into `./platfromAssets/renative.runtime.json` making it possible to inject the values directly to JS source code"
    },
    "zodPlatformsKeys": {
      "type": "string",
      "enum": [
        "web",
        "ios",
        "android",
        "androidtv",
        "firetv",
        "tvos",
        "macos",
        "linux",
        "windows",
        "tizen",
        "webos",
        "chromecast",
        "kaios",
        "webtv",
        "androidwear",
        "tizenwatch",
        "tizenmobile",
        "xbox"
      ]
    },
    "zodSupportedPlatforms": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/zodPlatformsKeys"
      },
      "description": "Array list of all supported platforms in current project"
    },
    "zodExt": {
      "description": "Object used to extend your renative with custom props. This allows renative json schema to be validated"
    },
    "zodDefaultTargets": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "propertyNames": {
        "enum": [
          "web",
          "ios",
          "android",
          "androidtv",
          "firetv",
          "tvos",
          "macos",
          "linux",
          "windows",
          "tizen",
          "webos",
          "chromecast",
          "kaios",
          "webtv",
          "androidwear",
          "tizenwatch",
          "tizenmobile",
          "xbox"
        ]
      },
      "description": "Define targets to be used when -t is not set on any project run"
    },
    "zodBuildSchemeFragment": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Defines whether build scheme shows up in options to run"
        },
        "description": {
          "type": "string",
          "description": "Custom description of the buildScheme will be displayed directly in cli if you run rnv with an empty paramener `-s`"
        }
      },
      "additionalProperties": false
    },
    "zodNpmDep": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "zodTemplateConfigFragment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "includedPaths": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "engines": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "platforms": {
                    "$ref": "#/definitions/zodSupportedPlatforms",
                    "description": "Array list of all supported platforms in current project"
                  }
                },
                "required": [
                  "paths"
                ],
                "additionalProperties": false
              }
            ]
          },
          "description": "Defines list of all file/dir paths you want to include in template"
        },
        "renative_json": {
          "type": "object",
          "properties": {
            "$schema": {
              "type": "string"
            },
            "extendsTemplate": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "package_json": {
          "type": "object",
          "properties": {
            "dependencies": {
              "$ref": "#/definitions/zodNpmDep"
            },
            "devDependencies": {
              "$ref": "#/definitions/zodNpmDep"
            },
            "peerDependencies": {
              "$ref": "#/definitions/zodNpmDep"
            },
            "optionalDependencies": {
              "$ref": "#/definitions/zodNpmDep"
            },
            "name": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "browserslist": {}
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "description": "Used in `renative.template.json` allows you to define template behaviour."
    },
    "zodProjectTemplates": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "packageName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "localPath": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "zodCommonSchemaFragment": {
      "type": "object",
      "properties": {
        "includedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
        },
        "excludedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
        },
        "id": {
          "type": "string",
          "description": "Bundle ID of application. ie: com.example.myapp"
        },
        "idSuffix": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Semver style version of your app"
        },
        "versionCode": {
          "type": "string",
          "description": "Manual verride of generated version code"
        },
        "versionFormat": {
          "type": "string",
          "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
        },
        "versionCodeFormat": {
          "type": "string",
          "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
        },
        "versionCodeOffset": {
          "type": "number"
        },
        "title": {
          "type": "string",
          "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
        },
        "description": {
          "type": "string",
          "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
        },
        "author": {
          "type": "string",
          "description": "Author name"
        },
        "license": {
          "type": "string",
          "description": "Injects license information into app"
        },
        "includedFonts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
        },
        "backgroundColor": {
          "type": "string",
          "minLength": 4,
          "maxLength": 9,
          "pattern": "^#",
          "description": "Defines root view backgroundColor for all platforms in HEX format"
        },
        "splashScreen": {
          "type": "boolean",
          "description": "Enable or disable splash screen"
        },
        "fontSources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
        },
        "assetSources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
        },
        "includedPlugins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
        },
        "excludedPlugins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
        },
        "runtime": {
          "$ref": "#/definitions/zodRuntime"
        },
        "custom": {
          "$ref": "#/definitions/zodExt"
        }
      },
      "additionalProperties": false
    },
    "zodCommonSchema": {
      "type": "object",
      "properties": {
        "includedPermissions": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
        },
        "excludedPermissions": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
        },
        "id": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
        },
        "idSuffix": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
        },
        "version": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
        },
        "versionCode": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
        },
        "versionFormat": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
        },
        "versionCodeFormat": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
        },
        "versionCodeOffset": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
        },
        "title": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
        },
        "description": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
        },
        "author": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
        },
        "license": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
        },
        "includedFonts": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
        },
        "backgroundColor": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
        },
        "splashScreen": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
        },
        "fontSources": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
        },
        "assetSources": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
        },
        "includedPlugins": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
        },
        "excludedPlugins": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
        },
        "runtime": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
        },
        "custom": {
          "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
        },
        "buildSchemes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "includedPermissions": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
              },
              "excludedPermissions": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
              },
              "id": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
              },
              "idSuffix": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
              },
              "version": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
              },
              "versionCode": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
              },
              "versionFormat": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
              },
              "versionCodeFormat": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
              },
              "versionCodeOffset": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
              },
              "title": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
              },
              "description": {
                "$ref": "#/definitions/zodBuildSchemeFragment/properties/description"
              },
              "author": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
              },
              "license": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
              },
              "includedFonts": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
              },
              "backgroundColor": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
              },
              "splashScreen": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
              },
              "fontSources": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
              },
              "assetSources": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
              },
              "includedPlugins": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
              },
              "excludedPlugins": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
              },
              "runtime": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
              },
              "custom": {
                "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
              },
              "enabled": {
                "$ref": "#/definitions/zodBuildSchemeFragment/properties/enabled"
              },
              "extendPlatform": {
                "$ref": "#/definitions/zodPlatformsKeys"
              },
              "assetFolderPlatform": {
                "type": "string",
                "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
              },
              "engine": {
                "type": "string",
                "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
              },
              "entryFile": {
                "type": "string",
                "default": "index",
                "description": "Alternative name of the entry file without `.js` extension"
              },
              "bundleAssets": {
                "type": "boolean",
                "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
              },
              "enableSourceMaps": {
                "type": "boolean",
                "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
              },
              "bundleIsDev": {
                "type": "boolean",
                "description": "If set to `true` debug build will be generated"
              },
              "getJsBundleFile": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false,
      "description": "Common config props used as default props for all available buildSchemes"
    },
    "zodPluginSchema": {
      "type": "object",
      "properties": {
        "supportedPlatforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zodPlatformsKeys"
          },
          "description": "Array list of platforms for which the current plugin is supported"
        },
        "disabled": {
          "type": "boolean",
          "default": false,
          "description": "Marks plugin disabled"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom props passed to plugin"
        },
        "version": {
          "type": "string",
          "description": "Version of plugin. Typically package version"
        },
        "deprecated": {
          "type": "string",
          "description": "Marks your plugin deprecated with warning showing in the console during rnv commands"
        },
        "source": {
          "type": "string",
          "description": "Will define custom scope for your plugin config to extend from.\n\nNOTE: custom scopes can be defined via paths.pluginTemplates.[CUSTOM_SCOPE].{}"
        },
        "disableNpm": {
          "type": "boolean",
          "description": "Will skip including plugin in package.json and installing it via npm/yarn etc"
        },
        "skipMerge": {
          "type": "boolean",
          "description": "Will not attempt to merge with existing plugin configuration (ie. coming form renative pluginTemplates)\n\nNOTE: if set to `true` you need to configure your plugin object fully"
        },
        "npm": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Object of npm dependencies of this plugin. These will be injected into package.json"
        },
        "pluginDependencies": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "type": "null"
            }
          ],
          "description": "List of other Renative plugins this plugin depends on"
        },
        "webpackConfig": {
          "type": "object",
          "properties": {
            "modulePaths": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "moduleAliases": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "projectPath": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "projectPath"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  }
                }
              ]
            },
            "nextTranspileModules": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "description": "Allows you to configure webpack bahaviour per each individual plugin"
        },
        "disablePluginTemplateOverrides": {
          "type": "boolean",
          "description": "Disables plugin overrides for selected plugin"
        },
        "fontSources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "android": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "extendPlatform": {
                  "type": "string",
                  "enum": [
                    "web",
                    "ios",
                    "android",
                    "androidtv",
                    "firetv",
                    "tvos",
                    "macos",
                    "linux",
                    "windows",
                    "tizen",
                    "webos",
                    "chromecast",
                    "kaios",
                    "webtv",
                    "androidwear",
                    "tizenwatch",
                    "tizenmobile",
                    "xbox"
                  ],
                  "description": "Extends platform configuration from another platform"
                },
                "disabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Marks plugin platform disabled"
                },
                "forceLinking": {
                  "type": "boolean",
                  "default": false,
                  "description": "Packages that cannot be autolinked yet can still be added to MainApplication PackageList dynamically by setting this to true"
                },
                "path": {
                  "type": "string",
                  "description": "Enables you to pass custom path to plugin. If undefined, the default `node_modules/[plugin-name]` will be used."
                },
                "templateAndroid": {
                  "type": "object",
                  "properties": {
                    "gradle_properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "boolean",
                          "number"
                        ]
                      },
                      "description": "Overrides values in `gradle.properties` file of generated android based project"
                    },
                    "build_gradle": {
                      "type": "object",
                      "properties": {
                        "plugins": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "buildscript": {
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dependencies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ext": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "custom": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "repositories",
                            "dependencies",
                            "ext",
                            "custom"
                          ],
                          "additionalProperties": false
                        },
                        "injectAfterAll": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "description": "Overrides values in `build.gradle` file of generated android based project"
                    },
                    "app_build_gradle": {
                      "type": "object",
                      "properties": {
                        "apply": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "defaultConfig": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "buildTypes": {
                          "type": "object",
                          "properties": {
                            "debug": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "release": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "afterEvaluate": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "implementations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "implementation": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "description": "Overrides values in `app/build.gradle` file of generated android based project"
                    },
                    "AndroidManifest_xml": {
                      "$ref": "#/definitions/zodAndroidManifest",
                      "description": "Allows you to directly manipulate `AndroidManifest.xml` via json override mechanism\nInjects / Overrides values in AndroidManifest.xml file of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `android:name` to target correct tag to merge into\n "
                    },
                    "strings_xml": {
                      "$ref": "#/definitions/zodAndroidResources",
                      "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                    },
                    "styles_xml": {
                      "$ref": "#/definitions/zodAndroidResources",
                      "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                    },
                    "colors_xml": {
                      "$ref": "#/definitions/zodAndroidResources",
                      "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                    },
                    "MainApplication_kt": {
                      "type": "object",
                      "properties": {
                        "imports": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "packages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "packageParams": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "description": "Allows you to configure behaviour of MainActivity"
                    },
                    "MainActivity_kt": {
                      "type": "object",
                      "properties": {
                        "onCreate": {
                          "type": "string",
                          "default": "super.onCreate(savedInstanceState)",
                          "description": "Overrides super.onCreate method handler of MainActivity.kt"
                        },
                        "imports": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "resultMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "SplashActivity_kt": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "settings_gradle": {
                      "type": "object",
                      "properties": {
                        "include": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "project": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "include",
                        "project"
                      ],
                      "additionalProperties": false
                    },
                    "gradle_wrapper_properties": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "proguard_rules_pro": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "projectName": {
                  "type": "string"
                },
                "skipLinking": {
                  "type": "boolean"
                },
                "skipImplementation": {
                  "type": "boolean"
                },
                "implementation": {
                  "type": "string"
                },
                "package": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "androidtv": {
          "$ref": "#/definitions/zodPluginSchema/properties/android"
        },
        "androidwear": {
          "$ref": "#/definitions/zodPluginSchema/properties/android"
        },
        "firetv": {
          "$ref": "#/definitions/zodPluginSchema/properties/android"
        },
        "ios": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "extendPlatform": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/extendPlatform"
                },
                "disabled": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/disabled"
                },
                "forceLinking": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/forceLinking"
                },
                "path": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/path"
                },
                "templateXcode": {
                  "type": "object",
                  "properties": {
                    "Podfile": {
                      "type": "object",
                      "properties": {
                        "injectLines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "post_install": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sources": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of URLs that will be injected on top of the Podfile as sources"
                        },
                        "podDependencies": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "staticPods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "header": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of strings that will be injected on top of the Podfile"
                        }
                      },
                      "additionalProperties": false,
                      "description": "Allows to manipulate Podfile"
                    },
                    "project_pbxproj": {
                      "type": "object",
                      "properties": {
                        "sourceFiles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "resourceFiles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headerFiles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "buildPhases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "shellPath": {
                                "type": "string"
                              },
                              "shellScript": {
                                "type": "string"
                              },
                              "inputPaths": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "shellPath",
                              "shellScript",
                              "inputPaths"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "frameworks": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "buildSettings": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "AppDelegate_mm": {
                      "type": "object",
                      "properties": {
                        "appDelegateMethods": {
                          "type": "object",
                          "properties": {
                            "application": {
                              "type": "object",
                              "properties": {
                                "didFinishLaunchingWithOptions": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "order": {
                                            "type": "number"
                                          },
                                          "value": {
                                            "type": "string"
                                          },
                                          "weight": {
                                            "type": "number"
                                          }
                                        },
                                        "required": [
                                          "order",
                                          "value",
                                          "weight"
                                        ],
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                },
                                "applicationDidBecomeActive": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "open": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "supportedInterfaceOrientationsFor": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didReceiveRemoteNotification": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didFailToRegisterForRemoteNotificationsWithError": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didReceive": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didRegister": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didRegisterForRemoteNotificationsWithDeviceToken": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "continue": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didConnectCarInterfaceController": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didDisconnectCarInterfaceController": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                }
                              },
                              "additionalProperties": false
                            },
                            "userNotificationCenter": {
                              "type": "object",
                              "properties": {
                                "willPresent": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                },
                                "didReceiveNotificationResponse": {
                                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                }
                              },
                              "additionalProperties": false
                            },
                            "custom": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "appDelegateImports": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "AppDelegate_h": {
                      "type": "object",
                      "properties": {
                        "appDelegateImports": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "appDelegateExtensions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "appDelegateMethods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "Info_plist": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "git": {
                  "type": "string",
                  "description": "Alternative git url for pod instead of version"
                },
                "commit": {
                  "type": "string",
                  "description": "Alternative git commit reference string"
                },
                "version": {
                  "type": "string",
                  "description": "Version of pod"
                },
                "podNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podName": {
                  "type": "string"
                },
                "staticFrameworks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isStatic": {
                  "type": "boolean"
                },
                "buildType": {
                  "type": "string",
                  "enum": [
                    "dynamic",
                    "static"
                  ],
                  "description": "Build type of the pod"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "tvos": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios"
        },
        "tizen": {
          "anyOf": [
            {
              "$ref": "#/definitions/zodPluginPlatformBaseFragment"
            },
            {
              "type": "null"
            }
          ]
        },
        "tizenmobile": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "tizenwatch": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "webos": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "web": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "webtv": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "chromecast": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "kaios": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "macos": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "extendPlatform": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/extendPlatform"
                },
                "disabled": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/disabled"
                },
                "forceLinking": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/forceLinking"
                },
                "path": {
                  "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/path"
                },
                "templateXcode": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
                },
                "git": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/git"
                },
                "commit": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/commit"
                },
                "version": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/version"
                },
                "podNames": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/podNames"
                },
                "podName": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/podName"
                },
                "staticFrameworks": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/staticFrameworks"
                },
                "isStatic": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/isStatic"
                },
                "buildType": {
                  "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/buildType"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "linux": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "windows": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        },
        "xbox": {
          "$ref": "#/definitions/zodPluginSchema/properties/tizen"
        }
      },
      "additionalProperties": false
    },
    "zodPluginsSchema": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "anyOf": [
              {
                "$ref": "#/definitions/zodPluginSchema"
              },
              {
                "type": "string"
              }
            ]
          },
          {
            "type": "null"
          }
        ]
      },
      "description": "Define all plugins available in your project. you can then use `includedPlugins` and `excludedPlugins` props to define active and inactive plugins per each app config"
    },
    "zodPluginBaseFragment": {
      "type": "object",
      "properties": {
        "supportedPlatforms": {
          "$ref": "#/definitions/zodPluginSchema/properties/supportedPlatforms"
        },
        "disabled": {
          "$ref": "#/definitions/zodPluginSchema/properties/disabled"
        },
        "props": {
          "$ref": "#/definitions/zodPluginSchema/properties/props"
        },
        "version": {
          "$ref": "#/definitions/zodPluginSchema/properties/version"
        },
        "deprecated": {
          "$ref": "#/definitions/zodPluginSchema/properties/deprecated"
        },
        "source": {
          "$ref": "#/definitions/zodPluginSchema/properties/source"
        },
        "disableNpm": {
          "$ref": "#/definitions/zodPluginSchema/properties/disableNpm"
        },
        "skipMerge": {
          "$ref": "#/definitions/zodPluginSchema/properties/skipMerge"
        },
        "npm": {
          "$ref": "#/definitions/zodPluginSchema/properties/npm"
        },
        "pluginDependencies": {
          "$ref": "#/definitions/zodPluginSchema/properties/pluginDependencies"
        },
        "webpackConfig": {
          "$ref": "#/definitions/zodPluginSchema/properties/webpackConfig"
        },
        "disablePluginTemplateOverrides": {
          "$ref": "#/definitions/zodPluginSchema/properties/disablePluginTemplateOverrides"
        },
        "fontSources": {
          "$ref": "#/definitions/zodPluginSchema/properties/fontSources"
        }
      },
      "additionalProperties": false
    },
    "zodPluginPlatformAndroidFragment": {
      "type": "object",
      "properties": {
        "templateAndroid": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/templateAndroid"
        },
        "projectName": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/projectName"
        },
        "skipLinking": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/skipLinking"
        },
        "skipImplementation": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/skipImplementation"
        },
        "implementation": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/implementation"
        },
        "package": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/package"
        }
      },
      "additionalProperties": false,
      "description": "Allows more advanced modifications to Android based project template"
    },
    "zodPluginPlatformiOSFragment": {
      "type": "object",
      "properties": {
        "templateXcode": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
        },
        "git": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/git"
        },
        "commit": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/commit"
        },
        "version": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/version"
        },
        "podNames": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/podNames"
        },
        "podName": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/podName"
        },
        "staticFrameworks": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/staticFrameworks"
        },
        "isStatic": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/isStatic"
        },
        "buildType": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/buildType"
        }
      },
      "additionalProperties": false
    },
    "zodPluginPlatformBaseFragment": {
      "type": "object",
      "properties": {
        "extendPlatform": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/extendPlatform"
        },
        "disabled": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/disabled"
        },
        "forceLinking": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/forceLinking"
        },
        "path": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/path"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformsSchema": {
      "type": "object",
      "properties": {
        "android": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "enableAndroidX": {
                    "type": [
                      "boolean",
                      "string"
                    ],
                    "default": true,
                    "description": "Enables new android X architecture"
                  },
                  "enableJetifier": {
                    "type": [
                      "boolean",
                      "string"
                    ],
                    "default": true,
                    "description": "Enables Jetifier"
                  },
                  "signingConfig": {
                    "type": "string",
                    "default": "Debug",
                    "description": "Equivalent to running `./gradlew/assembleDebug` or `./gradlew/assembleRelease`"
                  },
                  "minSdkVersion": {
                    "type": "number",
                    "default": 28,
                    "description": "Minimum Android SDK version device has to have in order for app to run"
                  },
                  "multipleAPKs": {
                    "type": "boolean",
                    "description": "If set to `true`, apk will be split into multiple ones for each architecture: \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\""
                  },
                  "aab": {
                    "type": "boolean",
                    "description": "If set to true, android project will generate app.aab instead of apk"
                  },
                  "extraGradleParams": {
                    "type": "string",
                    "description": "Allows passing extra params to gradle command"
                  },
                  "minifyEnabled": {
                    "type": "boolean",
                    "description": "Sets minifyEnabled buildType property in app/build.gradle"
                  },
                  "targetSdkVersion": {
                    "type": "number",
                    "description": "Allows you define custom targetSdkVersion equivalent to: `targetSdkVersion = [VERSION]` in build.gradle"
                  },
                  "compileSdkVersion": {
                    "type": "number",
                    "description": "Allows you define custom compileSdkVersion equivalent to: `compileSdkVersion = [VERSION]` in build.gradle"
                  },
                  "kotlinVersion": {
                    "type": "string",
                    "default": "1.7.10",
                    "description": "Allows you define custom kotlin version"
                  },
                  "ndkVersion": {
                    "type": "string",
                    "description": "Allows you define custom ndkVersion equivalent to: `ndkVersion = [VERSION]` in build.gradle"
                  },
                  "supportLibVersion": {
                    "type": "string",
                    "description": "Allows you define custom supportLibVersion equivalent to: `supportLibVersion = [VERSION]` in build.gradle"
                  },
                  "googleServicesVersion": {
                    "type": "string",
                    "description": "Allows you define custom googleServicesVersion equivalent to: `googleServicesVersion = [VERSION]` in build.gradle"
                  },
                  "gradleBuildToolsVersion": {
                    "type": "string",
                    "description": "Allows you define custom gradle build tools version equivalent to:  `classpath 'com.android.tools.build:gradle:[VERSION]'`"
                  },
                  "gradleWrapperVersion": {
                    "type": "string",
                    "description": "Allows you define custom gradle wrapper version equivalent to: `distributionUrl=https\\://services.gradle.org/distributions/gradle-[VERSION]-all.zip`"
                  },
                  "excludedFeatures": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Override features definitions in AndroidManifest.xml by exclusion"
                  },
                  "includedFeatures": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Override features definitions in AndroidManifest.xml by inclusion"
                  },
                  "buildToolsVersion": {
                    "type": "string",
                    "default": "34.0.0",
                    "description": "Override android build tools version"
                  },
                  "disableSigning": {
                    "type": "boolean"
                  },
                  "storeFile": {
                    "type": "string",
                    "description": "Name of the store file in android project"
                  },
                  "keyAlias": {
                    "type": "string",
                    "description": "Key alias of the store file in android project"
                  },
                  "newArchEnabled": {
                    "type": "boolean",
                    "description": "Enables new arch for android. Default: false"
                  },
                  "flipperEnabled": {
                    "type": "boolean",
                    "description": "Enables flipper  for ios. Default: true"
                  },
                  "reactNativeEngine": {
                    "type": "string",
                    "enum": [
                      "jsc",
                      "v8-android",
                      "v8-android-nointl",
                      "v8-android-jit",
                      "v8-android-jit-nointl",
                      "hermes"
                    ],
                    "default": "hermes",
                    "description": "Allows you to define specific native render engine to be used"
                  },
                  "templateAndroid": {
                    "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/templateAndroid"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "enableAndroidX": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/enableAndroidX",
              "description": "Enables new android X architecture"
            },
            "enableJetifier": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/enableJetifier",
              "description": "Enables Jetifier"
            },
            "signingConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/signingConfig",
              "description": "Equivalent to running `./gradlew/assembleDebug` or `./gradlew/assembleRelease`"
            },
            "minSdkVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/minSdkVersion",
              "description": "Minimum Android SDK version device has to have in order for app to run"
            },
            "multipleAPKs": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/multipleAPKs",
              "description": "If set to `true`, apk will be split into multiple ones for each architecture: \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\""
            },
            "aab": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/aab",
              "description": "If set to true, android project will generate app.aab instead of apk"
            },
            "extraGradleParams": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/extraGradleParams",
              "description": "Allows passing extra params to gradle command"
            },
            "minifyEnabled": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/minifyEnabled",
              "description": "Sets minifyEnabled buildType property in app/build.gradle"
            },
            "targetSdkVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/targetSdkVersion",
              "description": "Allows you define custom targetSdkVersion equivalent to: `targetSdkVersion = [VERSION]` in build.gradle"
            },
            "compileSdkVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/compileSdkVersion",
              "description": "Allows you define custom compileSdkVersion equivalent to: `compileSdkVersion = [VERSION]` in build.gradle"
            },
            "kotlinVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/kotlinVersion",
              "description": "Allows you define custom kotlin version"
            },
            "ndkVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/ndkVersion",
              "description": "Allows you define custom ndkVersion equivalent to: `ndkVersion = [VERSION]` in build.gradle"
            },
            "supportLibVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/supportLibVersion",
              "description": "Allows you define custom supportLibVersion equivalent to: `supportLibVersion = [VERSION]` in build.gradle"
            },
            "googleServicesVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/googleServicesVersion",
              "description": "Allows you define custom googleServicesVersion equivalent to: `googleServicesVersion = [VERSION]` in build.gradle"
            },
            "gradleBuildToolsVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/gradleBuildToolsVersion",
              "description": "Allows you define custom gradle build tools version equivalent to:  `classpath 'com.android.tools.build:gradle:[VERSION]'`"
            },
            "gradleWrapperVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/gradleWrapperVersion",
              "description": "Allows you define custom gradle wrapper version equivalent to: `distributionUrl=https\\://services.gradle.org/distributions/gradle-[VERSION]-all.zip`"
            },
            "excludedFeatures": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/excludedFeatures",
              "description": "Override features definitions in AndroidManifest.xml by exclusion"
            },
            "includedFeatures": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/includedFeatures",
              "description": "Override features definitions in AndroidManifest.xml by inclusion"
            },
            "buildToolsVersion": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/buildToolsVersion",
              "description": "Override android build tools version"
            },
            "disableSigning": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/disableSigning"
            },
            "storeFile": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/storeFile",
              "description": "Name of the store file in android project"
            },
            "keyAlias": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/keyAlias",
              "description": "Key alias of the store file in android project"
            },
            "newArchEnabled": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
              "description": "Enables new arch for android. Default: false"
            },
            "flipperEnabled": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/flipperEnabled",
              "description": "Enables flipper  for ios. Default: true"
            },
            "reactNativeEngine": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
              "description": "Allows you to define specific native render engine to be used"
            },
            "templateAndroid": {
              "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/templateAndroid"
            }
          },
          "additionalProperties": false
        },
        "androidtv": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android"
        },
        "androidwear": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android"
        },
        "firetv": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android"
        },
        "ios": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "ignoreWarnings": {
                    "type": "boolean",
                    "description": "Injects `inhibit_all_warnings` into Podfile"
                  },
                  "ignoreLogs": {
                    "type": "boolean",
                    "description": "Passes `-quiet` to xcodebuild command"
                  },
                  "deploymentTarget": {
                    "type": "string",
                    "description": "Deployment target for xcodepoj"
                  },
                  "orientationSupport": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tab": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "teamID": {
                    "type": "string",
                    "description": "Apple teamID"
                  },
                  "excludedArchs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
                  },
                  "urlScheme": {
                    "type": "string",
                    "description": "URL Scheme for the app used for deeplinking"
                  },
                  "teamIdentifier": {
                    "type": "string",
                    "description": "Apple developer team ID"
                  },
                  "scheme": {
                    "type": "string"
                  },
                  "schemeTarget": {
                    "type": "string"
                  },
                  "appleId": {
                    "type": "string"
                  },
                  "provisioningStyle": {
                    "type": "string"
                  },
                  "newArchEnabled": {
                    "type": "boolean",
                    "description": "Enables new archs for iOS. Default: false"
                  },
                  "codeSignIdentity": {
                    "type": "string",
                    "description": "Special property which tells Xcode how to build your project"
                  },
                  "commandLineArguments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Allows you to pass launch arguments to active scheme"
                  },
                  "provisionProfileSpecifier": {
                    "type": "string"
                  },
                  "provisionProfileSpecifiers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "allowProvisioningUpdates": {
                    "type": "boolean"
                  },
                  "provisioningProfiles": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "codeSignIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "systemCapabilities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "entitlements": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "runScheme": {
                    "type": "string"
                  },
                  "sdk": {
                    "type": "string"
                  },
                  "testFlightId": {
                    "type": "string"
                  },
                  "firebaseId": {
                    "type": "string"
                  },
                  "privacyManifests": {
                    "type": "object",
                    "properties": {
                      "NSPrivacyAccessedAPITypes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "NSPrivacyAccessedAPIType": {
                              "type": "string",
                              "enum": [
                                "NSPrivacyAccessedAPICategorySystemBootTime",
                                "NSPrivacyAccessedAPICategoryDiskSpace",
                                "NSPrivacyAccessedAPICategoryActiveKeyboards",
                                "NSPrivacyAccessedAPICategoryUserDefaults"
                              ]
                            },
                            "NSPrivacyAccessedAPITypeReasons": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "DDA9.1",
                                  "C617.1",
                                  "3B52.1",
                                  "0A2A.1",
                                  "35F9.1",
                                  "8FFB.1",
                                  "3D61.1",
                                  "85F4.1",
                                  "E174.1",
                                  "7D9E.1",
                                  "B728.1",
                                  "3EC4.1",
                                  "54BD.1",
                                  "CA92.1",
                                  "1C8F.1",
                                  "C56D.1",
                                  "AC6B.1"
                                ]
                              }
                            }
                          },
                          "required": [
                            "NSPrivacyAccessedAPIType",
                            "NSPrivacyAccessedAPITypeReasons"
                          ],
                          "additionalProperties": false,
                          "description": "Official apple documentation https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_use_of_required_reason_api"
                        }
                      }
                    },
                    "required": [
                      "NSPrivacyAccessedAPITypes"
                    ],
                    "additionalProperties": false
                  },
                  "exportOptions": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string"
                      },
                      "teamID": {
                        "type": "string"
                      },
                      "uploadBitcode": {
                        "type": "boolean"
                      },
                      "compileBitcode": {
                        "type": "boolean"
                      },
                      "uploadSymbols": {
                        "type": "boolean"
                      },
                      "signingStyle": {
                        "type": "string"
                      },
                      "signingCertificate": {
                        "type": "string"
                      },
                      "provisioningProfiles": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "reactNativeEngine": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                  },
                  "templateXcode": {
                    "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "ignoreWarnings": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings",
              "description": "Injects `inhibit_all_warnings` into Podfile"
            },
            "ignoreLogs": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs",
              "description": "Passes `-quiet` to xcodebuild command"
            },
            "deploymentTarget": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget",
              "description": "Deployment target for xcodepoj"
            },
            "orientationSupport": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
            },
            "teamID": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID",
              "description": "Apple teamID"
            },
            "excludedArchs": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs",
              "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
            },
            "urlScheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme",
              "description": "URL Scheme for the app used for deeplinking"
            },
            "teamIdentifier": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier",
              "description": "Apple developer team ID"
            },
            "scheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
            },
            "schemeTarget": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
            },
            "appleId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
            },
            "provisioningStyle": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
            },
            "newArchEnabled": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
              "description": "Enables new archs for iOS. Default: false"
            },
            "codeSignIdentity": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity",
              "description": "Special property which tells Xcode how to build your project"
            },
            "commandLineArguments": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments",
              "description": "Allows you to pass launch arguments to active scheme"
            },
            "provisionProfileSpecifier": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
            },
            "provisionProfileSpecifiers": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
            },
            "allowProvisioningUpdates": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
            },
            "provisioningProfiles": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
            },
            "codeSignIdentities": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
            },
            "systemCapabilities": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
            },
            "entitlements": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
            },
            "runScheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
            },
            "sdk": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
            },
            "testFlightId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
            },
            "firebaseId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
            },
            "privacyManifests": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
            },
            "exportOptions": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
            },
            "reactNativeEngine": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
              "description": "Allows you to define specific native render engine to be used"
            },
            "templateXcode": {
              "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
            }
          },
          "additionalProperties": false
        },
        "tvos": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios"
        },
        "tizen": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "package": {
                    "type": "string"
                  },
                  "certificateProfile": {
                    "type": "string"
                  },
                  "appName": {
                    "type": "string"
                  },
                  "timestampBuildFiles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "devServerHost": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "webpackConfig": {
                    "type": "object",
                    "properties": {
                      "publicUrl": {
                        "type": "string"
                      },
                      "customScripts": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allows you to inject custom script into html header"
                      },
                      "excludedPaths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allows to specify files or directories in the src folder that webpack should ignore when bundling code."
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "package": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/package"
            },
            "certificateProfile": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/certificateProfile"
            },
            "appName": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/appName"
            },
            "timestampBuildFiles": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
            },
            "devServerHost": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
            },
            "environment": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
            }
          },
          "additionalProperties": false
        },
        "tizenmobile": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen"
        },
        "tizenwatch": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen"
        },
        "webos": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "iconColor": {
                    "type": "string"
                  },
                  "timestampBuildFiles": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                  },
                  "devServerHost": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                  },
                  "environment": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                  },
                  "webpackConfig": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "iconColor": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/webos/properties/buildSchemes/additionalProperties/properties/iconColor"
            },
            "timestampBuildFiles": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
            },
            "devServerHost": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
            },
            "environment": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
            }
          },
          "additionalProperties": false
        },
        "web": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "webpackConfig": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                  },
                  "pagesDir": {
                    "type": "string",
                    "description": "Custom pages directory used by nextjs. Use relative paths"
                  },
                  "outputDir": {
                    "type": "string",
                    "description": "Custom output directory used by nextjs equivalent to `npx next build` with custom outputDir. Use relative paths"
                  },
                  "exportDir": {
                    "type": "string",
                    "description": "Custom export directory used by nextjs equivalent to `npx next export --outdir <exportDir>`. Use relative paths"
                  },
                  "nextTranspileModules": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "timestampBuildFiles": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                  },
                  "devServerHost": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                  },
                  "environment": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
            },
            "pagesDir": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/pagesDir",
              "description": "Custom pages directory used by nextjs. Use relative paths"
            },
            "outputDir": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/outputDir",
              "description": "Custom output directory used by nextjs equivalent to `npx next build` with custom outputDir. Use relative paths"
            },
            "exportDir": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/exportDir",
              "description": "Custom export directory used by nextjs equivalent to `npx next export --outdir <exportDir>`. Use relative paths"
            },
            "nextTranspileModules": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/nextTranspileModules"
            },
            "timestampBuildFiles": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
            },
            "devServerHost": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
            },
            "environment": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
            }
          },
          "additionalProperties": false
        },
        "webtv": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web"
        },
        "chromecast": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web"
        },
        "kaios": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web"
        },
        "macos": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "ignoreWarnings": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings"
                  },
                  "ignoreLogs": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs"
                  },
                  "deploymentTarget": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget"
                  },
                  "orientationSupport": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
                  },
                  "teamID": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID"
                  },
                  "excludedArchs": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs"
                  },
                  "urlScheme": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme"
                  },
                  "teamIdentifier": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier"
                  },
                  "scheme": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
                  },
                  "schemeTarget": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
                  },
                  "appleId": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
                  },
                  "provisioningStyle": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
                  },
                  "newArchEnabled": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled"
                  },
                  "codeSignIdentity": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity"
                  },
                  "commandLineArguments": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments"
                  },
                  "provisionProfileSpecifier": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
                  },
                  "provisionProfileSpecifiers": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
                  },
                  "allowProvisioningUpdates": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
                  },
                  "provisioningProfiles": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
                  },
                  "codeSignIdentities": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
                  },
                  "systemCapabilities": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
                  },
                  "entitlements": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
                  },
                  "runScheme": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
                  },
                  "sdk": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
                  },
                  "testFlightId": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
                  },
                  "firebaseId": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
                  },
                  "privacyManifests": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
                  },
                  "exportOptions": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
                  },
                  "reactNativeEngine": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                  },
                  "templateXcode": {
                    "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
                  },
                  "electronConfig": {
                    "description": "Allows you to configure electron app as per https://www.electron.build/"
                  },
                  "BrowserWindow": {
                    "type": "object",
                    "properties": {
                      "width": {
                        "type": "number"
                      },
                      "height": {
                        "type": "number"
                      },
                      "webPreferences": {
                        "type": "object",
                        "properties": {
                          "devTools": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "devTools"
                        ],
                        "additionalProperties": false,
                        "description": "Extra web preferences of electron app"
                      }
                    },
                    "additionalProperties": false,
                    "description": "Allows you to configure electron wrapper app window"
                  },
                  "webpackConfig": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "ignoreWarnings": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings",
              "description": "Injects `inhibit_all_warnings` into Podfile"
            },
            "ignoreLogs": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs",
              "description": "Passes `-quiet` to xcodebuild command"
            },
            "deploymentTarget": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget",
              "description": "Deployment target for xcodepoj"
            },
            "orientationSupport": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
            },
            "teamID": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID",
              "description": "Apple teamID"
            },
            "excludedArchs": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs",
              "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
            },
            "urlScheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme",
              "description": "URL Scheme for the app used for deeplinking"
            },
            "teamIdentifier": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier",
              "description": "Apple developer team ID"
            },
            "scheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
            },
            "schemeTarget": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
            },
            "appleId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
            },
            "provisioningStyle": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
            },
            "newArchEnabled": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
              "description": "Enables new archs for iOS. Default: false"
            },
            "codeSignIdentity": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity",
              "description": "Special property which tells Xcode how to build your project"
            },
            "commandLineArguments": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments",
              "description": "Allows you to pass launch arguments to active scheme"
            },
            "provisionProfileSpecifier": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
            },
            "provisionProfileSpecifiers": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
            },
            "allowProvisioningUpdates": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
            },
            "provisioningProfiles": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
            },
            "codeSignIdentities": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
            },
            "systemCapabilities": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
            },
            "entitlements": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
            },
            "runScheme": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
            },
            "sdk": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
            },
            "testFlightId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
            },
            "firebaseId": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
            },
            "privacyManifests": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
            },
            "exportOptions": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
            },
            "reactNativeEngine": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
              "description": "Allows you to define specific native render engine to be used"
            },
            "templateXcode": {
              "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
            },
            "electronConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig",
              "description": "Allows you to configure electron app as per https://www.electron.build/"
            },
            "BrowserWindow": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow",
              "description": "Allows you to configure electron wrapper app window"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
            }
          },
          "additionalProperties": false
        },
        "linux": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web"
        },
        "windows": {
          "type": "object",
          "properties": {
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/title"
                  },
                  "description": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/description"
                  },
                  "author": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
                  },
                  "extendPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                  },
                  "assetFolderPlatform": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                  },
                  "engine": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
                  },
                  "entryFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
                  },
                  "bundleAssets": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                  },
                  "enableSourceMaps": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                  },
                  "bundleIsDev": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                  },
                  "getJsBundleFile": {
                    "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                  },
                  "electronConfig": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig"
                  },
                  "BrowserWindow": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow"
                  },
                  "reactNativeEngine": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                  },
                  "templateVSProject": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "description": "Specify generated project language: cpp for C++ or cs for C#"
                      },
                      "arch": {
                        "type": "string",
                        "description": "Specification of targeted architecture"
                      },
                      "experimentalNuGetDependency": {
                        "type": "boolean"
                      },
                      "useWinUI3": {
                        "type": "boolean"
                      },
                      "nuGetTestVersion": {
                        "type": "string"
                      },
                      "reactNativeEngine": {
                        "type": "string"
                      },
                      "nuGetTestFeed": {
                        "type": "string"
                      },
                      "overwrite": {
                        "type": "boolean",
                        "description": "Whether to attempt to override the existing builds files when running a build once more"
                      },
                      "release": {
                        "type": "boolean",
                        "description": "Enables full packaging of the app for release"
                      },
                      "root": {
                        "type": "string",
                        "description": "Project root folder location (not the app itself, which is in platformBuilds)"
                      },
                      "singleproc": {
                        "type": "boolean",
                        "description": "Opt out of multi-proc builds (only available in 0.64 and newer versions of react-native-windows)"
                      },
                      "emulator": {
                        "type": "boolean"
                      },
                      "device": {
                        "type": "boolean"
                      },
                      "target": {
                        "type": "string"
                      },
                      "remoteDebugging": {
                        "type": "boolean"
                      },
                      "logging": {
                        "type": "boolean",
                        "description": "Logging all the build proccesses to console"
                      },
                      "packager": {
                        "type": "boolean"
                      },
                      "bundle": {
                        "type": "boolean"
                      },
                      "launch": {
                        "type": "boolean",
                        "description": "Launches the application once the build process is finished"
                      },
                      "autolink": {
                        "type": "boolean",
                        "description": "Launches the application once the build process is finished"
                      },
                      "build": {
                        "type": "boolean",
                        "description": "Builds the application before launching it"
                      },
                      "sln": {
                        "type": "string",
                        "description": "Location of Visual Studio solution .sln file (wraps multiple projects)"
                      },
                      "proj": {
                        "type": "string",
                        "description": "Root project directory for your React Native Windows project (not Visual Studio project)"
                      },
                      "appPath": {
                        "type": "string",
                        "description": "Full path to windows plaform build directory"
                      },
                      "msbuildprops": {
                        "type": "string",
                        "description": "Comma separated props to pass to msbuild, eg: prop1=value1,prop2=value2"
                      },
                      "buildLogDirectory": {
                        "type": "string",
                        "description": "Full path to directory where builds logs should be stored, default - project path"
                      },
                      "info": {
                        "type": "boolean",
                        "description": "Print information about the build machine to console"
                      },
                      "directDebugging": {
                        "type": "boolean"
                      },
                      "telemetry": {
                        "type": "boolean",
                        "description": "Send analytics data of @react-native-windows/cli usage to Microsoft"
                      },
                      "devPort": {
                        "type": "string"
                      },
                      "additionalMetroOptions": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "packageExtension": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "webpackConfig": {
                    "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                  }
                },
                "additionalProperties": false
              }
            },
            "includedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPermissions",
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPermissions",
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/id",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/idSuffix"
            },
            "version": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/version",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCode",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionFormat",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeFormat",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/versionCodeOffset"
            },
            "title": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/title",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/description",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/author",
              "description": "Author name"
            },
            "license": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/license",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedFonts",
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/backgroundColor",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/splashScreen",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/fontSources",
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/assetSources",
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/includedPlugins",
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/excludedPlugins",
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/runtime"
            },
            "custom": {
              "$ref": "#/definitions/zodCommonSchemaFragment/properties/custom"
            },
            "extendPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
            },
            "assetFolderPlatform": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
              "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
            },
            "engine": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine",
              "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
            },
            "entryFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile",
              "description": "Alternative name of the entry file without `.js` extension"
            },
            "bundleAssets": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets",
              "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
            },
            "enableSourceMaps": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
              "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
            },
            "bundleIsDev": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
              "description": "If set to `true` debug build will be generated"
            },
            "getJsBundleFile": {
              "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
            },
            "electronConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig",
              "description": "Allows you to configure electron app as per https://www.electron.build/"
            },
            "BrowserWindow": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow",
              "description": "Allows you to configure electron wrapper app window"
            },
            "reactNativeEngine": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
              "description": "Allows you to define specific native render engine to be used"
            },
            "templateVSProject": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/windows/properties/buildSchemes/additionalProperties/properties/templateVSProject"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
            }
          },
          "additionalProperties": false
        },
        "xbox": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/windows"
        }
      },
      "additionalProperties": false,
      "description": "Object containing platform configurations"
    },
    "zodPlatformAndroidFragment": {
      "type": "object",
      "properties": {
        "enableAndroidX": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/enableAndroidX"
        },
        "enableJetifier": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/enableJetifier"
        },
        "signingConfig": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/signingConfig"
        },
        "minSdkVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/minSdkVersion"
        },
        "multipleAPKs": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/multipleAPKs"
        },
        "aab": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/aab"
        },
        "extraGradleParams": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/extraGradleParams"
        },
        "minifyEnabled": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/minifyEnabled"
        },
        "targetSdkVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/targetSdkVersion"
        },
        "compileSdkVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/compileSdkVersion"
        },
        "kotlinVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/kotlinVersion"
        },
        "ndkVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/ndkVersion"
        },
        "supportLibVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/supportLibVersion"
        },
        "googleServicesVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/googleServicesVersion"
        },
        "gradleBuildToolsVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/gradleBuildToolsVersion"
        },
        "gradleWrapperVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/gradleWrapperVersion"
        },
        "excludedFeatures": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/excludedFeatures"
        },
        "includedFeatures": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/includedFeatures"
        },
        "buildToolsVersion": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/buildToolsVersion"
        },
        "disableSigning": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/disableSigning"
        },
        "storeFile": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/storeFile"
        },
        "keyAlias": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/keyAlias"
        },
        "newArchEnabled": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/newArchEnabled"
        },
        "flipperEnabled": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/flipperEnabled"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformiOSFragment": {
      "type": "object",
      "properties": {
        "ignoreWarnings": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings"
        },
        "ignoreLogs": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs"
        },
        "deploymentTarget": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget"
        },
        "orientationSupport": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
        },
        "teamID": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID"
        },
        "excludedArchs": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs"
        },
        "urlScheme": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme"
        },
        "teamIdentifier": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier"
        },
        "scheme": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
        },
        "schemeTarget": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
        },
        "appleId": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
        },
        "provisioningStyle": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
        },
        "newArchEnabled": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled"
        },
        "codeSignIdentity": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity"
        },
        "commandLineArguments": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments"
        },
        "provisionProfileSpecifier": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
        },
        "provisionProfileSpecifiers": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
        },
        "allowProvisioningUpdates": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
        },
        "provisioningProfiles": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
        },
        "codeSignIdentities": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
        },
        "systemCapabilities": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
        },
        "entitlements": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
        },
        "runScheme": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
        },
        "sdk": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
        },
        "testFlightId": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
        },
        "firebaseId": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
        },
        "privacyManifests": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
        },
        "exportOptions": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformBaseFragment": {
      "type": "object",
      "properties": {
        "extendPlatform": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/extendPlatform"
        },
        "assetFolderPlatform": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
        },
        "engine": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/engine"
        },
        "entryFile": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/entryFile"
        },
        "bundleAssets": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleAssets"
        },
        "enableSourceMaps": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
        },
        "bundleIsDev": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
        },
        "getJsBundleFile": {
          "$ref": "#/definitions/zodCommonSchema/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformLightningFragment": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformNextJsFragment": {
      "type": "object",
      "properties": {
        "pagesDir": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/pagesDir"
        },
        "outputDir": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/outputDir"
        },
        "exportDir": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/exportDir"
        },
        "nextTranspileModules": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/web/properties/buildSchemes/additionalProperties/properties/nextTranspileModules"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformWebFragment": {
      "type": "object",
      "properties": {
        "timestampBuildFiles": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
        },
        "devServerHost": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
        },
        "environment": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformTizenFragment": {
      "type": "object",
      "properties": {
        "package": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/package"
        },
        "certificateProfile": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/certificateProfile"
        },
        "appName": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/tizen/properties/buildSchemes/additionalProperties/properties/appName"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformReactNativeFragment": {
      "type": "object",
      "properties": {
        "reactNativeEngine": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformWindowsFragment": {
      "type": "object",
      "properties": {
        "templateVSProject": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/windows/properties/buildSchemes/additionalProperties/properties/templateVSProject"
        }
      },
      "additionalProperties": false
    },
    "zodResourcesChildBase": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false
    },
    "zodResourcesChildWithChildren": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/tag"
        },
        "name": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/name"
        },
        "parent": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/parent"
        },
        "value": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/value"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zodResourcesChildWithChildren"
          }
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false
    },
    "zodAndroidResources": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/tag"
        },
        "name": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/name"
        },
        "parent": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/parent"
        },
        "value": {
          "$ref": "#/definitions/zodResourcesChildBase/properties/value"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zodResourcesChildWithChildren"
          }
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false,
      "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
    },
    "zodManifestChildBase": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "android:name": {
          "type": "string"
        },
        "android:theme": {
          "type": "string"
        },
        "android:value": {},
        "android:required": {
          "type": "boolean"
        },
        "android:allowBackup": {
          "type": "boolean"
        },
        "android:largeHeap": {
          "type": "boolean"
        },
        "android:label": {
          "type": "string"
        },
        "android:icon": {
          "type": "string"
        },
        "android:roundIcon": {
          "type": "string"
        },
        "android:banner": {
          "type": "string"
        },
        "tools:replace": {
          "type": "string"
        },
        "android:supportsRtl": {
          "type": "boolean"
        },
        "tools:targetApi": {
          "type": "number"
        },
        "android:usesCleartextTraffic": {
          "type": "boolean"
        },
        "android:appComponentFactory": {
          "type": "string"
        },
        "android:screenOrientation": {
          "type": "string"
        },
        "android:noHistory": {
          "type": "boolean"
        },
        "android:launchMode": {
          "type": "string"
        },
        "android:exported": {
          "type": "boolean"
        },
        "android:configChanges": {
          "type": "string"
        },
        "android:windowSoftInputMode": {
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false
    },
    "zodManifestChildWithChildren": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/zodManifestChildBase/properties/tag"
        },
        "name": {
          "$ref": "#/definitions/zodManifestChildBase/properties/name"
        },
        "android:name": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:name"
        },
        "android:theme": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:theme"
        },
        "android:value": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:value"
        },
        "android:required": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:required"
        },
        "android:allowBackup": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:allowBackup"
        },
        "android:largeHeap": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:largeHeap"
        },
        "android:label": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:label"
        },
        "android:icon": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:icon"
        },
        "android:roundIcon": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:roundIcon"
        },
        "android:banner": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:banner"
        },
        "tools:replace": {
          "$ref": "#/definitions/zodManifestChildBase/properties/tools:replace"
        },
        "android:supportsRtl": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:supportsRtl"
        },
        "tools:targetApi": {
          "$ref": "#/definitions/zodManifestChildBase/properties/tools:targetApi"
        },
        "android:usesCleartextTraffic": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:usesCleartextTraffic"
        },
        "android:appComponentFactory": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:appComponentFactory"
        },
        "android:screenOrientation": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:screenOrientation"
        },
        "android:noHistory": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:noHistory"
        },
        "android:launchMode": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:launchMode"
        },
        "android:exported": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:exported"
        },
        "android:configChanges": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:configChanges"
        },
        "android:windowSoftInputMode": {
          "$ref": "#/definitions/zodManifestChildBase/properties/android:windowSoftInputMode"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zodManifestChildWithChildren"
          }
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false
    },
    "zodAndroidManifest": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "xmlns:android": {
          "type": "string"
        },
        "xmlns:tools": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zodManifestChildWithChildren"
          }
        }
      },
      "required": [
        "tag"
      ],
      "additionalProperties": false,
      "description": "Allows you to directly manipulate `AndroidManifest.xml` via json override mechanism\nInjects / Overrides values in AndroidManifest.xml file of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `android:name` to target correct tag to merge into\n "
    },
    "zodTemplateAndroidFragment": {
      "type": "object",
      "properties": {
        "templateAndroid": {
          "$ref": "#/definitions/zodPluginSchema/properties/android/anyOf/0/properties/templateAndroid"
        }
      },
      "additionalProperties": false,
      "description": "Allows more advanced modifications to Android based project template"
    },
    "zodTemplateXcodeFragment": {
      "type": "object",
      "properties": {
        "templateXcode": {
          "$ref": "#/definitions/zodPluginSchema/properties/ios/anyOf/0/properties/templateXcode"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformElectronFragment": {
      "type": "object",
      "properties": {
        "electronConfig": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig"
        },
        "BrowserWindow": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow"
        }
      },
      "additionalProperties": false
    },
    "zodPlatformWebOSFragment": {
      "type": "object",
      "properties": {
        "iconColor": {
          "$ref": "#/definitions/zodPlatformsSchema/properties/webos/properties/buildSchemes/additionalProperties/properties/iconColor"
        }
      },
      "additionalProperties": false
    },
    "renative-1.0.schema": {
      "type": "object",
      "properties": {
        "app": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the app in `./appConfigs/[APP_ID]/renative.json`. MUST match APP_ID name of the folder"
            },
            "custom": {
              "$ref": "#/definitions/zodExt"
            },
            "hidden": {
              "type": "boolean",
              "description": "If set to true in `./appConfigs/[APP_ID]/renative.json` the APP_ID will be hidden from list of appConfigs `-c`"
            },
            "extendsTemplate": {
              "type": "string",
              "description": "You can extend another renative.json file of currently applied template by providing relative or full package name path. Exampe: `@rnv/template-starter/renative.json`"
            },
            "extend": {
              "type": "string",
              "description": "extend another appConfig by id"
            }
          },
          "additionalProperties": false
        },
        "project": {
          "type": "object",
          "properties": {
            "workspaceID": {
              "type": "string",
              "description": "Workspace ID your project belongs to. This will mach same folder name in the root of your user directory. ie `~/` on macOS"
            },
            "projectVersion": {
              "type": "string",
              "description": "Version of project"
            },
            "projectName": {
              "type": "string",
              "description": "Name of the project which will be used in workspace as folder name. this will also be used as part of the KEY in crypto env var generator"
            },
            "isTemplate": {
              "type": "boolean",
              "description": "Marks project as template. This disables certain user checks like version mismatch etc"
            },
            "defaults": {
              "type": "object",
              "properties": {
                "ports": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  },
                  "propertyNames": {
                    "enum": [
                      "web",
                      "ios",
                      "android",
                      "androidtv",
                      "firetv",
                      "tvos",
                      "macos",
                      "linux",
                      "windows",
                      "tizen",
                      "webos",
                      "chromecast",
                      "kaios",
                      "webtv",
                      "androidwear",
                      "tizenwatch",
                      "tizenmobile",
                      "xbox"
                    ]
                  },
                  "description": "Allows you to assign custom port per each supported platform specific to this project. this is useful if you foten switch between multiple projects and do not want to experience constant port conflicts"
                },
                "supportedPlatforms": {
                  "$ref": "#/definitions/zodSupportedPlatforms",
                  "description": "Array list of all supported platforms in current project"
                },
                "portOffset": {
                  "type": "number",
                  "description": "Offset each port default value by increment"
                },
                "defaultCommandSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "propertyNames": {
                    "enum": [
                      "run",
                      "export",
                      "build"
                    ]
                  },
                  "description": "List of default schemes for each rnv command. This is useful if you want to avoid specifying `-s ...` every time your run rnv command. bu default rnv uses `-s debug`. NOTE: you can only use schemes you defined in `buildSchemes`"
                },
                "targets": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "propertyNames": {
                    "enum": [
                      "web",
                      "ios",
                      "android",
                      "androidtv",
                      "firetv",
                      "tvos",
                      "macos",
                      "linux",
                      "windows",
                      "tizen",
                      "webos",
                      "chromecast",
                      "kaios",
                      "webtv",
                      "androidwear",
                      "tizenwatch",
                      "tizenmobile",
                      "xbox"
                    ]
                  },
                  "description": "Override of default targets specific to this project"
                }
              },
              "additionalProperties": false,
              "description": "Default system config for this project"
            },
            "pipes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "To avoid rnv building `buildHooks/src` every time you can specify which specific pipes should trigger recompile of buildHooks"
            },
            "crypto": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Relative path to encrypted file in your renative project. Example: \"./secrets/mySecrets.enc\""
                },
                "isOptional": {
                  "type": "boolean",
                  "description": "Mark if crypto object should not checked every run"
                }
              },
              "required": [
                "path"
              ],
              "additionalProperties": false,
              "description": "This prop enables automatic encrypt and decrypt of sensitive information in your project. \nRNV will generate new env variable with can be used to encrypt and decrypt. this env var is generated by combining (and sanitizing) 2 properties from your renative.json: \nworkspaceID + projectName.\nThese 2 properties are also used to generate path on your local machine where encrypted files will be decrypted into."
            },
            "paths": {
              "type": "object",
              "properties": {
                "appConfigsDir": {
                  "type": "string",
                  "description": "Custom path to appConfigs. defaults to `./appConfigs`"
                },
                "platformTemplatesDirs": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "propertyNames": {
                    "enum": [
                      "web",
                      "ios",
                      "android",
                      "androidtv",
                      "firetv",
                      "tvos",
                      "macos",
                      "linux",
                      "windows",
                      "tizen",
                      "webos",
                      "chromecast",
                      "kaios",
                      "webtv",
                      "androidwear",
                      "tizenwatch",
                      "tizenmobile",
                      "xbox"
                    ]
                  },
                  "description": "Custom location of ejected platform templates. this is populated after you run `rnv platform eject`"
                },
                "appConfigsDirs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of custom location app configs directories`"
                },
                "platformAssetsDir": {
                  "type": "string",
                  "description": "Custom path to platformAssets folder. defaults to `./platformAssets`"
                },
                "platformBuildsDir": {
                  "type": "string",
                  "description": "Custom path to platformBuilds folder. defaults to `./platformBuilds`"
                },
                "pluginTemplates": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "npm": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "npm",
                      "path"
                    ],
                    "additionalProperties": false
                  },
                  "description": "\n        Allows you to define custom plugin template scopes. default scope for all plugins is `rnv`."
                }
              },
              "additionalProperties": false,
              "description": "Define custom paths for RNV to look into"
            },
            "permissions": {
              "type": "object",
              "properties": {
                "android": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "security": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "security"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Android SDK specific permissions"
                },
                "ios": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "desc": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "desc"
                    ],
                    "additionalProperties": false
                  },
                  "description": "iOS SDK specific permissions"
                }
              },
              "additionalProperties": false,
              "description": "Permission definititions which can be used by app configs via `includedPermissions` and `excludedPermissions` to customize permissions for each app"
            },
            "engines": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "const": "source:rnv"
              },
              "description": "List of engines available in this project"
            },
            "enableHookRebuild": {
              "type": "boolean",
              "description": "If set to true in `./renative.json` build hooks will be compiled at each rnv command run. If set to `false` (default) rebuild will be triggered only if `dist` folder is missing, `-r` has been passed or you run `rnv hooks run` directly making your rnv commands faster"
            },
            "extendsTemplate": {
              "type": "string",
              "description": "You can extend another renative.json file of currently applied template by providing relative or full package name path. Exampe: `@rnv/template-starter/renative.json`"
            },
            "tasks": {
              "type": "object",
              "properties": {
                "install": {
                  "type": "object",
                  "properties": {
                    "script": {
                      "type": "string"
                    },
                    "platform": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "ignore": {
                            "type": "boolean"
                          },
                          "ignoreTasks": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "ignore",
                          "ignoreTasks"
                        ],
                        "additionalProperties": false
                      },
                      "propertyNames": {
                        "enum": [
                          "web",
                          "ios",
                          "android",
                          "androidtv",
                          "firetv",
                          "tvos",
                          "macos",
                          "linux",
                          "windows",
                          "tizen",
                          "webos",
                          "chromecast",
                          "kaios",
                          "webtv",
                          "androidwear",
                          "tizenwatch",
                          "tizenmobile",
                          "xbox"
                        ]
                      }
                    }
                  },
                  "required": [
                    "script",
                    "platform"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "install"
              ],
              "additionalProperties": false,
              "description": "Allows to override specific task within renative toolchain. (currently only `install` supported). this is useful if you want to change specific behaviour of built-in task. ie install task triggers yarn/npm install by default. but that might not be desirable installation trigger"
            },
            "integrations": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "description": "Object containing integration configurations where key represents package name"
            },
            "env": {
              "type": "object",
              "additionalProperties": {},
              "description": "Object containing injected env variables"
            },
            "runtime": {
              "$ref": "#/definitions/zodRuntime",
              "description": "This object will be automatically injected into `./platfromAssets/renative.runtime.json` making it possible to inject the values directly to JS source code"
            },
            "isMonorepo": {
              "type": "boolean",
              "description": "Mark if your project is part of monorepo"
            },
            "monoRoot": {
              "type": "string",
              "description": "Define custom path to monorepo root where starting point is project directory"
            },
            "custom": {
              "$ref": "#/definitions/zodExt",
              "description": "Object used to extend your renative with custom props. This allows renative json schema to be validated"
            },
            "skipAutoUpdate": {
              "type": "boolean",
              "description": "Enables the equivalent to passing --skipDependencyCheck parameter on every rnv run so you don't have to use it"
            },
            "common": {
              "$ref": "#/definitions/zodCommonSchema"
            },
            "platforms": {
              "$ref": "#/definitions/zodPlatformsSchema"
            },
            "plugins": {
              "$ref": "#/definitions/zodPluginsSchema"
            },
            "templateConfig": {
              "$ref": "#/definitions/zodTemplateConfigFragment",
              "description": "Used in `renative.template.json` allows you to define template behaviour."
            }
          },
          "additionalProperties": false
        },
        "local": {
          "type": "object",
          "properties": {
            "workspaceAppConfigsDir": {
              "type": "string",
              "description": "Defines app configs dir outside of current project"
            },
            "defaultTargets": {
              "$ref": "#/definitions/zodDefaultTargets",
              "description": "Define targets to be used when -t is not set on any project run"
            },
            "_meta": {
              "type": "object",
              "properties": {
                "currentAppConfigId": {
                  "type": "string"
                },
                "requiresJetify": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "overrides": {
          "type": "object",
          "properties": {
            "overrides": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "integration": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the integration (best to use name of the actual package)"
            }
          },
          "additionalProperties": false
        },
        "engine": {
          "type": "object",
          "properties": {
            "custom": {
              "$ref": "#/definitions/zodExt"
            },
            "name": {
              "type": "string",
              "description": "Name of the engine (best to use name of the actual package)"
            },
            "engineExtension": {
              "type": "string",
              "description": "Engine extension used by rnv during compilation"
            },
            "overview": {
              "type": "string",
              "description": "Overview description of engine"
            },
            "plugins": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "List of required plugins for this engine to work properly"
            },
            "npm": {
              "type": "object",
              "properties": {
                "dependencies": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "devDependencies": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/engine/properties/npm/properties/dependencies"
                },
                "peerDependencies": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/engine/properties/npm/properties/dependencies"
                },
                "optionalDependencies": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/engine/properties/npm/properties/dependencies"
                }
              },
              "additionalProperties": false,
              "description": "Npm dependencies required for this plugin to work"
            },
            "platforms": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "engine": {
                    "type": "string"
                  },
                  "npm": {
                    "$ref": "#/definitions/renative-1.0.schema/properties/engine/properties/npm"
                  }
                },
                "additionalProperties": false
              },
              "propertyNames": {
                "enum": [
                  "web",
                  "ios",
                  "android",
                  "androidtv",
                  "firetv",
                  "tvos",
                  "macos",
                  "linux",
                  "windows",
                  "tizen",
                  "webos",
                  "chromecast",
                  "kaios",
                  "webtv",
                  "androidwear",
                  "tizenwatch",
                  "tizenmobile",
                  "xbox"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "plugin": {
          "type": "object",
          "properties": {
            "supportedPlatforms": {
              "$ref": "#/definitions/zodPluginSchema/properties/supportedPlatforms",
              "description": "Array list of platforms for which the current plugin is supported"
            },
            "disabled": {
              "$ref": "#/definitions/zodPluginSchema/properties/disabled",
              "description": "Marks plugin disabled"
            },
            "props": {
              "$ref": "#/definitions/zodPluginSchema/properties/props",
              "description": "Custom props passed to plugin"
            },
            "version": {
              "$ref": "#/definitions/zodPluginSchema/properties/version",
              "description": "Version of plugin. Typically package version"
            },
            "deprecated": {
              "$ref": "#/definitions/zodPluginSchema/properties/deprecated",
              "description": "Marks your plugin deprecated with warning showing in the console during rnv commands"
            },
            "source": {
              "$ref": "#/definitions/zodPluginSchema/properties/source",
              "description": "Will define custom scope for your plugin config to extend from.\n\nNOTE: custom scopes can be defined via paths.pluginTemplates.[CUSTOM_SCOPE].{}"
            },
            "disableNpm": {
              "$ref": "#/definitions/zodPluginSchema/properties/disableNpm",
              "description": "Will skip including plugin in package.json and installing it via npm/yarn etc"
            },
            "skipMerge": {
              "$ref": "#/definitions/zodPluginSchema/properties/skipMerge",
              "description": "Will not attempt to merge with existing plugin configuration (ie. coming form renative pluginTemplates)\n\nNOTE: if set to `true` you need to configure your plugin object fully"
            },
            "npm": {
              "$ref": "#/definitions/zodPluginSchema/properties/npm",
              "description": "Object of npm dependencies of this plugin. These will be injected into package.json"
            },
            "pluginDependencies": {
              "$ref": "#/definitions/zodPluginSchema/properties/pluginDependencies",
              "description": "List of other Renative plugins this plugin depends on"
            },
            "webpackConfig": {
              "$ref": "#/definitions/zodPluginSchema/properties/webpackConfig",
              "description": "Allows you to configure webpack bahaviour per each individual plugin"
            },
            "disablePluginTemplateOverrides": {
              "$ref": "#/definitions/zodPluginSchema/properties/disablePluginTemplateOverrides",
              "description": "Disables plugin overrides for selected plugin"
            },
            "fontSources": {
              "$ref": "#/definitions/zodPluginSchema/properties/fontSources"
            },
            "android": {
              "$ref": "#/definitions/zodPluginSchema/properties/android"
            },
            "androidtv": {
              "$ref": "#/definitions/zodPluginSchema/properties/androidtv"
            },
            "androidwear": {
              "$ref": "#/definitions/zodPluginSchema/properties/androidwear"
            },
            "firetv": {
              "$ref": "#/definitions/zodPluginSchema/properties/firetv"
            },
            "ios": {
              "$ref": "#/definitions/zodPluginSchema/properties/ios"
            },
            "tvos": {
              "$ref": "#/definitions/zodPluginSchema/properties/tvos"
            },
            "tizen": {
              "$ref": "#/definitions/zodPluginSchema/properties/tizen"
            },
            "tizenmobile": {
              "$ref": "#/definitions/zodPluginSchema/properties/tizenmobile"
            },
            "tizenwatch": {
              "$ref": "#/definitions/zodPluginSchema/properties/tizenwatch"
            },
            "webos": {
              "$ref": "#/definitions/zodPluginSchema/properties/webos"
            },
            "web": {
              "$ref": "#/definitions/zodPluginSchema/properties/web"
            },
            "webtv": {
              "$ref": "#/definitions/zodPluginSchema/properties/webtv"
            },
            "chromecast": {
              "$ref": "#/definitions/zodPluginSchema/properties/chromecast"
            },
            "kaios": {
              "$ref": "#/definitions/zodPluginSchema/properties/kaios"
            },
            "macos": {
              "$ref": "#/definitions/zodPluginSchema/properties/macos"
            },
            "linux": {
              "$ref": "#/definitions/zodPluginSchema/properties/linux"
            },
            "windows": {
              "$ref": "#/definitions/zodPluginSchema/properties/windows"
            },
            "xbox": {
              "$ref": "#/definitions/zodPluginSchema/properties/xbox"
            },
            "custom": {
              "$ref": "#/definitions/zodExt"
            }
          },
          "additionalProperties": false
        },
        "private": {
          "type": "object",
          "properties": {
            "private": {
              "type": "object",
              "additionalProperties": {},
              "description": "Special object which contains private info. this object should be used only in `renative.private.json` files and never commited to your repository. Private files usually reside in your workspace and are subject to crypto encryption if enabled. RNV will warn you if it finds private key in your regular `renative.json` file"
            },
            "platforms": {
              "type": "object",
              "properties": {
                "android": {
                  "type": "object",
                  "properties": {
                    "storePassword": {
                      "type": "string",
                      "description": "> WARNING. this prop is sensitive and should not be stored in standard `renative.json` configs. use `renative.private.json` files instead!\n\nstorePassword for keystore file"
                    },
                    "keyPassword": {
                      "type": "string",
                      "description": "> WARNING. this prop is sensitive and should not be stored in standard `renative.json` configs. use `renative.private.json` files instead!\n\nkeyPassword for keystore file"
                    },
                    "storeFile": {
                      "type": "string",
                      "description": "Name of the store file in android project"
                    },
                    "keyAlias": {
                      "type": "string",
                      "description": "Key alias of the store file in android project"
                    }
                  },
                  "additionalProperties": false
                },
                "androidtv": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/android"
                },
                "androidwear": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/android"
                },
                "firetv": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/android"
                },
                "ios": {},
                "tvos": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "tizen": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "tizenmobile": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "tizenwatch": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "webos": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "web": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "webtv": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "chromecast": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "kaios": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "macos": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "linux": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "windows": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                },
                "xbox": {
                  "$ref": "#/definitions/renative-1.0.schema/properties/private/properties/platforms/properties/ios"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "template": {
          "type": "object",
          "properties": {
            "templateConfig": {
              "$ref": "#/definitions/zodTemplateConfigFragment",
              "description": "Used in `renative.template.json` allows you to define template behaviour."
            },
            "bootstrapConfig": {
              "type": "object",
              "properties": {
                "bootstrapQuestions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "value": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": {}
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "required": [
                            "title",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "configProp": {
                        "type": "object",
                        "properties": {
                          "prop": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "prop",
                          "key"
                        ],
                        "additionalProperties": false
                      },
                      "type": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "onConfirm": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string"
                            },
                            "prop": {
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "action",
                            "path"
                          ],
                          "additionalProperties": false
                        }
                      }
                    },
                    "required": [
                      "type",
                      "title"
                    ],
                    "additionalProperties": false
                  },
                  "description": "Defines list of custom bootstrap questions"
                },
                "rnvNewPatchDependencies": {
                  "$ref": "#/definitions/zodNpmDep",
                  "description": "This ensures that the correct version of the npm packages will be used to run the project for the first time after creation"
                },
                "configModifiers": {
                  "type": "object",
                  "properties": {
                    "engines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "supportedPlatforms": {
                            "$ref": "#/definitions/zodSupportedPlatforms"
                          },
                          "nullifyIfFalse": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "supportedPlatforms"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "engines"
                  ],
                  "additionalProperties": false
                },
                "defaultSelectedPlatforms": {
                  "$ref": "#/definitions/zodSupportedPlatforms",
                  "description": "Array list of all supported platforms in current project"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "configTemplates": {
          "type": "object",
          "properties": {
            "projectTemplates": {
              "$ref": "#/definitions/zodProjectTemplates"
            },
            "engineTemplates": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "version",
                  "id",
                  "key"
                ],
                "additionalProperties": false
              }
            },
            "integrationTemplates": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "version"
                ],
                "additionalProperties": false
              }
            },
            "platformTemplates": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "engine": {
                    "type": "string"
                  }
                },
                "required": [
                  "engine"
                ],
                "additionalProperties": false
              },
              "propertyNames": {
                "enum": [
                  "web",
                  "ios",
                  "android",
                  "androidtv",
                  "firetv",
                  "tvos",
                  "macos",
                  "linux",
                  "windows",
                  "tizen",
                  "webos",
                  "chromecast",
                  "kaios",
                  "webtv",
                  "androidwear",
                  "tizenwatch",
                  "tizenmobile",
                  "xbox"
                ]
              }
            },
            "pluginTemplates": {
              "$ref": "#/definitions/zodPluginsSchema",
              "description": "Define all plugins available in your project. you can then use `includedPlugins` and `excludedPlugins` props to define active and inactive plugins per each app config"
            },
            "disableRnvDefaultOverrides": {
              "type": "boolean",
              "description": "Disables default rnv scope plugin overrides and merges. Useful if you want to test entirely clean plugin template list"
            }
          },
          "additionalProperties": false
        },
        "workspace": {
          "type": "object",
          "properties": {
            "defaultTargets": {
              "$ref": "#/definitions/zodDefaultTargets",
              "description": "Define targets to be used when -t is not set on any project run"
            },
            "sdks": {
              "type": "object",
              "properties": {
                "ANDROID_SDK": {
                  "type": "string"
                },
                "ANDROID_NDK": {
                  "type": "string"
                },
                "TIZEN_SDK": {
                  "type": "string"
                },
                "WEBOS_SDK": {
                  "type": "string"
                },
                "KAIOS_SDK": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "description": "Define your sdk configurations"
            },
            "projectTemplates": {
              "$ref": "#/definitions/zodProjectTemplates"
            },
            "disableTelemetry": {
              "type": "boolean",
              "description": "Opt-out from renative telemetry program. More info at https://renative.org/telemetry"
            },
            "appConfigsPath": {
              "type": "string",
              "description": "Enables you to define custom global appConfigs location that every project will automatically use"
            }
          },
          "additionalProperties": false
        },
        "workspaces": {
          "type": "object",
          "properties": {
            "workspaces": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "remote": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "type"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "path"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "workspaces"
          ],
          "additionalProperties": false
        },
        "$schema": {
          "type": "string",
          "description": "schema definition"
        }
      },
      "required": [
        "app",
        "project",
        "local",
        "overrides",
        "integration",
        "engine",
        "plugin",
        "private",
        "template",
        "configTemplates",
        "workspace",
        "workspaces"
      ],
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#"
}