{
  "$ref": "#/definitions/rnv.app",
  "definitions": {
    "rnv.app": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the app in `./appConfigs/[APP_ID]/renative.json`. MUST match APP_ID name of the folder"
        },
        "custom": {
          "description": "Object used to extend your renative with custom props. This allows renative json schema to be validated"
        },
        "hidden": {
          "type": "boolean",
          "description": "If set to true in `./appConfigs/[APP_ID]/renative.json` the APP_ID will be hidden from list of appConfigs `-c`"
        },
        "extendsTemplate": {
          "type": "string",
          "description": "You can extend another renative.json file of currently applied template by providing relative or full package name path. Exampe: `@rnv/template-starter/renative.json`"
        },
        "extend": {
          "type": "string",
          "description": "extend another appConfig by id"
        },
        "common": {
          "type": "object",
          "properties": {
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
            },
            "excludedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
            },
            "id": {
              "type": "string",
              "description": "Bundle ID of application. ie: com.example.myapp"
            },
            "idSuffix": {
              "type": "string"
            },
            "version": {
              "type": "string",
              "description": "Semver style version of your app"
            },
            "versionCode": {
              "type": "string",
              "description": "Manual verride of generated version code"
            },
            "versionFormat": {
              "type": "string",
              "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
            },
            "versionCodeFormat": {
              "type": "string",
              "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
            },
            "versionCodeOffset": {
              "type": "number"
            },
            "title": {
              "type": "string",
              "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
            },
            "description": {
              "type": "string",
              "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
            },
            "author": {
              "type": "string",
              "description": "Author name"
            },
            "license": {
              "type": "string",
              "description": "Injects license information into app"
            },
            "includedFonts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
            },
            "backgroundColor": {
              "type": "string",
              "minLength": 4,
              "maxLength": 9,
              "pattern": "^#",
              "description": "Defines root view backgroundColor for all platforms in HEX format"
            },
            "splashScreen": {
              "type": "boolean",
              "description": "Enable or disable splash screen"
            },
            "fontSources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
            },
            "assetSources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
            },
            "includedPlugins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
            },
            "excludedPlugins": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
            },
            "runtime": {
              "description": "This object will be automatically injected into `./platfromAssets/renative.runtime.json` making it possible to inject the values directly to JS source code"
            },
            "custom": {
              "$ref": "#/definitions/rnv.app/properties/custom"
            },
            "buildSchemes": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "includedPermissions": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                  },
                  "excludedPermissions": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                  },
                  "id": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                  },
                  "idSuffix": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                  },
                  "version": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                  },
                  "versionCode": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                  },
                  "versionFormat": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                  },
                  "versionCodeFormat": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                  },
                  "versionCodeOffset": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                  },
                  "title": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Custom description of the buildScheme will be displayed directly in cli if you run rnv with an empty paramener `-s`"
                  },
                  "author": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                  },
                  "license": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                  },
                  "includedFonts": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                  },
                  "backgroundColor": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                  },
                  "splashScreen": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                  },
                  "fontSources": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                  },
                  "assetSources": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                  },
                  "includedPlugins": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                  },
                  "excludedPlugins": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                  },
                  "runtime": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                  },
                  "custom": {
                    "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Defines whether build scheme shows up in options to run"
                  },
                  "extendPlatform": {
                    "type": "string",
                    "enum": [
                      "web",
                      "ios",
                      "android",
                      "androidtv",
                      "firetv",
                      "tvos",
                      "macos",
                      "linux",
                      "windows",
                      "tizen",
                      "webos",
                      "chromecast",
                      "kaios",
                      "webtv",
                      "androidwear",
                      "tizenwatch",
                      "tizenmobile",
                      "xbox"
                    ]
                  },
                  "assetFolderPlatform": {
                    "type": "string",
                    "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                  },
                  "engine": {
                    "type": "string",
                    "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                  },
                  "entryFile": {
                    "type": "string",
                    "default": "index",
                    "description": "Alternative name of the entry file without `.js` extension"
                  },
                  "bundleAssets": {
                    "type": "boolean",
                    "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                  },
                  "enableSourceMaps": {
                    "type": "boolean",
                    "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                  },
                  "bundleIsDev": {
                    "type": "boolean",
                    "description": "If set to `true` debug build will be generated"
                  },
                  "getJsBundleFile": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false,
          "description": "Common config props used as default props for all available buildSchemes"
        },
        "platforms": {
          "type": "object",
          "properties": {
            "android": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "enableAndroidX": {
                        "type": [
                          "boolean",
                          "string"
                        ],
                        "default": true,
                        "description": "Enables new android X architecture"
                      },
                      "enableJetifier": {
                        "type": [
                          "boolean",
                          "string"
                        ],
                        "default": true,
                        "description": "Enables Jetifier"
                      },
                      "signingConfig": {
                        "type": "string",
                        "default": "Debug",
                        "description": "Equivalent to running `./gradlew/assembleDebug` or `./gradlew/assembleRelease`"
                      },
                      "minSdkVersion": {
                        "type": "number",
                        "default": 28,
                        "description": "Minimum Android SDK version device has to have in order for app to run"
                      },
                      "multipleAPKs": {
                        "type": "boolean",
                        "description": "If set to `true`, apk will be split into multiple ones for each architecture: \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\""
                      },
                      "aab": {
                        "type": "boolean",
                        "description": "If set to true, android project will generate app.aab instead of apk"
                      },
                      "extraGradleParams": {
                        "type": "string",
                        "description": "Allows passing extra params to gradle command"
                      },
                      "minifyEnabled": {
                        "type": "boolean",
                        "description": "Sets minifyEnabled buildType property in app/build.gradle"
                      },
                      "targetSdkVersion": {
                        "type": "number",
                        "description": "Allows you define custom targetSdkVersion equivalent to: `targetSdkVersion = [VERSION]` in build.gradle"
                      },
                      "compileSdkVersion": {
                        "type": "number",
                        "description": "Allows you define custom compileSdkVersion equivalent to: `compileSdkVersion = [VERSION]` in build.gradle"
                      },
                      "kotlinVersion": {
                        "type": "string",
                        "default": "1.7.10",
                        "description": "Allows you define custom kotlin version"
                      },
                      "ndkVersion": {
                        "type": "string",
                        "description": "Allows you define custom ndkVersion equivalent to: `ndkVersion = [VERSION]` in build.gradle"
                      },
                      "supportLibVersion": {
                        "type": "string",
                        "description": "Allows you define custom supportLibVersion equivalent to: `supportLibVersion = [VERSION]` in build.gradle"
                      },
                      "googleServicesVersion": {
                        "type": "string",
                        "description": "Allows you define custom googleServicesVersion equivalent to: `googleServicesVersion = [VERSION]` in build.gradle"
                      },
                      "gradleBuildToolsVersion": {
                        "type": "string",
                        "description": "Allows you define custom gradle build tools version equivalent to:  `classpath 'com.android.tools.build:gradle:[VERSION]'`"
                      },
                      "gradleWrapperVersion": {
                        "type": "string",
                        "description": "Allows you define custom gradle wrapper version equivalent to: `distributionUrl=https\\://services.gradle.org/distributions/gradle-[VERSION]-all.zip`"
                      },
                      "excludedFeatures": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Override features definitions in AndroidManifest.xml by exclusion"
                      },
                      "includedFeatures": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Override features definitions in AndroidManifest.xml by inclusion"
                      },
                      "buildToolsVersion": {
                        "type": "string",
                        "default": "34.0.0",
                        "description": "Override android build tools version"
                      },
                      "disableSigning": {
                        "type": "boolean"
                      },
                      "storeFile": {
                        "type": "string",
                        "description": "Name of the store file in android project"
                      },
                      "keyAlias": {
                        "type": "string",
                        "description": "Key alias of the store file in android project"
                      },
                      "newArchEnabled": {
                        "type": "boolean",
                        "description": "Enables new arch for android. Default: false"
                      },
                      "flipperEnabled": {
                        "type": "boolean",
                        "description": "Enables flipper  for ios. Default: true"
                      },
                      "reactNativeEngine": {
                        "type": "string",
                        "enum": [
                          "jsc",
                          "v8-android",
                          "v8-android-nointl",
                          "v8-android-jit",
                          "v8-android-jit-nointl",
                          "hermes"
                        ],
                        "default": "hermes",
                        "description": "Allows you to define specific native render engine to be used"
                      },
                      "templateAndroid": {
                        "type": "object",
                        "properties": {
                          "gradle_properties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": [
                                "string",
                                "boolean",
                                "number"
                              ]
                            },
                            "description": "Overrides values in `gradle.properties` file of generated android based project"
                          },
                          "build_gradle": {
                            "type": "object",
                            "properties": {
                              "plugins": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "buildscript": {
                                "type": "object",
                                "properties": {
                                  "repositories": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "dependencies": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ext": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "custom": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "repositories",
                                  "dependencies",
                                  "ext",
                                  "custom"
                                ],
                                "additionalProperties": false
                              },
                              "injectAfterAll": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "description": "Overrides values in `build.gradle` file of generated android based project"
                          },
                          "app_build_gradle": {
                            "type": "object",
                            "properties": {
                              "apply": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "defaultConfig": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "buildTypes": {
                                "type": "object",
                                "properties": {
                                  "debug": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "release": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "afterEvaluate": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "implementations": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "implementation": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "description": "Overrides values in `app/build.gradle` file of generated android based project"
                          },
                          "AndroidManifest_xml": {
                            "type": "object",
                            "properties": {
                              "tag": {
                                "type": "string"
                              },
                              "package": {
                                "type": "string"
                              },
                              "xmlns:android": {
                                "type": "string"
                              },
                              "xmlns:tools": {
                                "type": "string"
                              },
                              "children": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tag": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "android:name": {
                                      "type": "string"
                                    },
                                    "android:theme": {
                                      "type": "string"
                                    },
                                    "android:value": {},
                                    "android:required": {
                                      "type": "boolean"
                                    },
                                    "android:allowBackup": {
                                      "type": "boolean"
                                    },
                                    "android:largeHeap": {
                                      "type": "boolean"
                                    },
                                    "android:label": {
                                      "type": "string"
                                    },
                                    "android:icon": {
                                      "type": "string"
                                    },
                                    "android:roundIcon": {
                                      "type": "string"
                                    },
                                    "android:banner": {
                                      "type": "string"
                                    },
                                    "tools:replace": {
                                      "type": "string"
                                    },
                                    "android:supportsRtl": {
                                      "type": "boolean"
                                    },
                                    "tools:targetApi": {
                                      "type": "number"
                                    },
                                    "android:usesCleartextTraffic": {
                                      "type": "boolean"
                                    },
                                    "android:appComponentFactory": {
                                      "type": "string"
                                    },
                                    "android:screenOrientation": {
                                      "type": "string"
                                    },
                                    "android:noHistory": {
                                      "type": "boolean"
                                    },
                                    "android:launchMode": {
                                      "type": "string"
                                    },
                                    "android:exported": {
                                      "type": "boolean"
                                    },
                                    "android:configChanges": {
                                      "type": "string"
                                    },
                                    "android:windowSoftInputMode": {
                                      "type": "string"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/AndroidManifest_xml/properties/children/items"
                                      }
                                    }
                                  },
                                  "required": [
                                    "tag"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "tag"
                            ],
                            "additionalProperties": false,
                            "description": "Allows you to directly manipulate `AndroidManifest.xml` via json override mechanism\nInjects / Overrides values in AndroidManifest.xml file of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `android:name` to target correct tag to merge into\n "
                          },
                          "strings_xml": {
                            "type": "object",
                            "properties": {
                              "tag": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "parent": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "children": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tag": {
                                      "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml/properties/tag"
                                    },
                                    "name": {
                                      "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml/properties/name"
                                    },
                                    "parent": {
                                      "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml/properties/parent"
                                    },
                                    "value": {
                                      "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml/properties/value"
                                    },
                                    "children": {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml/properties/children/items"
                                      }
                                    }
                                  },
                                  "required": [
                                    "tag"
                                  ],
                                  "additionalProperties": false
                                }
                              }
                            },
                            "required": [
                              "tag"
                            ],
                            "additionalProperties": false,
                            "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                          },
                          "styles_xml": {
                            "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml",
                            "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                          },
                          "colors_xml": {
                            "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid/properties/strings_xml",
                            "description": "Allows you to directly manipulate `res/values files` via json override mechanism\nInjects / Overrides values in res/values files of generated android based project\n> IMPORTANT: always ensure that your object contains `tag` and `name` to target correct tag to merge into\n "
                          },
                          "MainApplication_kt": {
                            "type": "object",
                            "properties": {
                              "imports": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "createMethods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "packages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "packageParams": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "description": "Allows you to configure behaviour of MainActivity"
                          },
                          "MainActivity_kt": {
                            "type": "object",
                            "properties": {
                              "onCreate": {
                                "type": "string",
                                "default": "super.onCreate(savedInstanceState)",
                                "description": "Overrides super.onCreate method handler of MainActivity.kt"
                              },
                              "imports": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "methods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "createMethods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "resultMethods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "SplashActivity_kt": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          },
                          "settings_gradle": {
                            "type": "object",
                            "properties": {
                              "include": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "project": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "include",
                              "project"
                            ],
                            "additionalProperties": false
                          },
                          "gradle_wrapper_properties": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          },
                          "proguard_rules_pro": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "enableAndroidX": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/enableAndroidX",
                  "description": "Enables new android X architecture"
                },
                "enableJetifier": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/enableJetifier",
                  "description": "Enables Jetifier"
                },
                "signingConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/signingConfig",
                  "description": "Equivalent to running `./gradlew/assembleDebug` or `./gradlew/assembleRelease`"
                },
                "minSdkVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/minSdkVersion",
                  "description": "Minimum Android SDK version device has to have in order for app to run"
                },
                "multipleAPKs": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/multipleAPKs",
                  "description": "If set to `true`, apk will be split into multiple ones for each architecture: \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\""
                },
                "aab": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/aab",
                  "description": "If set to true, android project will generate app.aab instead of apk"
                },
                "extraGradleParams": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/extraGradleParams",
                  "description": "Allows passing extra params to gradle command"
                },
                "minifyEnabled": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/minifyEnabled",
                  "description": "Sets minifyEnabled buildType property in app/build.gradle"
                },
                "targetSdkVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/targetSdkVersion",
                  "description": "Allows you define custom targetSdkVersion equivalent to: `targetSdkVersion = [VERSION]` in build.gradle"
                },
                "compileSdkVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/compileSdkVersion",
                  "description": "Allows you define custom compileSdkVersion equivalent to: `compileSdkVersion = [VERSION]` in build.gradle"
                },
                "kotlinVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/kotlinVersion",
                  "description": "Allows you define custom kotlin version"
                },
                "ndkVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/ndkVersion",
                  "description": "Allows you define custom ndkVersion equivalent to: `ndkVersion = [VERSION]` in build.gradle"
                },
                "supportLibVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/supportLibVersion",
                  "description": "Allows you define custom supportLibVersion equivalent to: `supportLibVersion = [VERSION]` in build.gradle"
                },
                "googleServicesVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/googleServicesVersion",
                  "description": "Allows you define custom googleServicesVersion equivalent to: `googleServicesVersion = [VERSION]` in build.gradle"
                },
                "gradleBuildToolsVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/gradleBuildToolsVersion",
                  "description": "Allows you define custom gradle build tools version equivalent to:  `classpath 'com.android.tools.build:gradle:[VERSION]'`"
                },
                "gradleWrapperVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/gradleWrapperVersion",
                  "description": "Allows you define custom gradle wrapper version equivalent to: `distributionUrl=https\\://services.gradle.org/distributions/gradle-[VERSION]-all.zip`"
                },
                "excludedFeatures": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/excludedFeatures",
                  "description": "Override features definitions in AndroidManifest.xml by exclusion"
                },
                "includedFeatures": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/includedFeatures",
                  "description": "Override features definitions in AndroidManifest.xml by inclusion"
                },
                "buildToolsVersion": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/buildToolsVersion",
                  "description": "Override android build tools version"
                },
                "disableSigning": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/disableSigning"
                },
                "storeFile": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/storeFile",
                  "description": "Name of the store file in android project"
                },
                "keyAlias": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/keyAlias",
                  "description": "Key alias of the store file in android project"
                },
                "newArchEnabled": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
                  "description": "Enables new arch for android. Default: false"
                },
                "flipperEnabled": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/flipperEnabled",
                  "description": "Enables flipper  for ios. Default: true"
                },
                "reactNativeEngine": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
                  "description": "Allows you to define specific native render engine to be used"
                },
                "templateAndroid": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid"
                }
              },
              "additionalProperties": false
            },
            "androidtv": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/android"
            },
            "androidwear": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/android"
            },
            "firetv": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/android"
            },
            "ios": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "ignoreWarnings": {
                        "type": "boolean",
                        "description": "Injects `inhibit_all_warnings` into Podfile"
                      },
                      "ignoreLogs": {
                        "type": "boolean",
                        "description": "Passes `-quiet` to xcodebuild command"
                      },
                      "deploymentTarget": {
                        "type": "string",
                        "description": "Deployment target for xcodepoj"
                      },
                      "orientationSupport": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tab": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "teamID": {
                        "type": "string",
                        "description": "Apple teamID"
                      },
                      "excludedArchs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
                      },
                      "urlScheme": {
                        "type": "string",
                        "description": "URL Scheme for the app used for deeplinking"
                      },
                      "teamIdentifier": {
                        "type": "string",
                        "description": "Apple developer team ID"
                      },
                      "scheme": {
                        "type": "string"
                      },
                      "schemeTarget": {
                        "type": "string"
                      },
                      "appleId": {
                        "type": "string"
                      },
                      "provisioningStyle": {
                        "type": "string"
                      },
                      "newArchEnabled": {
                        "type": "boolean",
                        "description": "Enables new archs for iOS. Default: false"
                      },
                      "codeSignIdentity": {
                        "type": "string",
                        "description": "Special property which tells Xcode how to build your project"
                      },
                      "commandLineArguments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allows you to pass launch arguments to active scheme"
                      },
                      "provisionProfileSpecifier": {
                        "type": "string"
                      },
                      "provisionProfileSpecifiers": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "allowProvisioningUpdates": {
                        "type": "boolean"
                      },
                      "provisioningProfiles": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "codeSignIdentities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "systemCapabilities": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      },
                      "entitlements": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "runScheme": {
                        "type": "string"
                      },
                      "sdk": {
                        "type": "string"
                      },
                      "testFlightId": {
                        "type": "string"
                      },
                      "firebaseId": {
                        "type": "string"
                      },
                      "privacyManifests": {
                        "type": "object",
                        "properties": {
                          "NSPrivacyAccessedAPITypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "NSPrivacyAccessedAPIType": {
                                  "type": "string",
                                  "enum": [
                                    "NSPrivacyAccessedAPICategorySystemBootTime",
                                    "NSPrivacyAccessedAPICategoryDiskSpace",
                                    "NSPrivacyAccessedAPICategoryActiveKeyboards",
                                    "NSPrivacyAccessedAPICategoryUserDefaults"
                                  ]
                                },
                                "NSPrivacyAccessedAPITypeReasons": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "DDA9.1",
                                      "C617.1",
                                      "3B52.1",
                                      "0A2A.1",
                                      "35F9.1",
                                      "8FFB.1",
                                      "3D61.1",
                                      "85F4.1",
                                      "E174.1",
                                      "7D9E.1",
                                      "B728.1",
                                      "3EC4.1",
                                      "54BD.1",
                                      "CA92.1",
                                      "1C8F.1",
                                      "C56D.1",
                                      "AC6B.1"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "NSPrivacyAccessedAPIType",
                                "NSPrivacyAccessedAPITypeReasons"
                              ],
                              "additionalProperties": false,
                              "description": "Official apple documentation https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_use_of_required_reason_api"
                            }
                          }
                        },
                        "required": [
                          "NSPrivacyAccessedAPITypes"
                        ],
                        "additionalProperties": false
                      },
                      "exportOptions": {
                        "type": "object",
                        "properties": {
                          "method": {
                            "type": "string"
                          },
                          "teamID": {
                            "type": "string"
                          },
                          "uploadBitcode": {
                            "type": "boolean"
                          },
                          "compileBitcode": {
                            "type": "boolean"
                          },
                          "uploadSymbols": {
                            "type": "boolean"
                          },
                          "signingStyle": {
                            "type": "string"
                          },
                          "signingCertificate": {
                            "type": "string"
                          },
                          "provisioningProfiles": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "reactNativeEngine": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                      },
                      "templateXcode": {
                        "type": "object",
                        "properties": {
                          "Podfile": {
                            "type": "object",
                            "properties": {
                              "injectLines": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "post_install": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "sources": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Array of URLs that will be injected on top of the Podfile as sources"
                              },
                              "podDependencies": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "staticPods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "header": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Array of strings that will be injected on top of the Podfile"
                              }
                            },
                            "additionalProperties": false,
                            "description": "Allows to manipulate Podfile"
                          },
                          "project_pbxproj": {
                            "type": "object",
                            "properties": {
                              "sourceFiles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "resourceFiles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "headerFiles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "buildPhases": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "shellPath": {
                                      "type": "string"
                                    },
                                    "shellScript": {
                                      "type": "string"
                                    },
                                    "inputPaths": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "shellPath",
                                    "shellScript",
                                    "inputPaths"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "frameworks": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "buildSettings": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "AppDelegate_mm": {
                            "type": "object",
                            "properties": {
                              "appDelegateMethods": {
                                "type": "object",
                                "properties": {
                                  "application": {
                                    "type": "object",
                                    "properties": {
                                      "didFinishLaunchingWithOptions": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "order": {
                                                  "type": "number"
                                                },
                                                "value": {
                                                  "type": "string"
                                                },
                                                "weight": {
                                                  "type": "number"
                                                }
                                              },
                                              "required": [
                                                "order",
                                                "value",
                                                "weight"
                                              ],
                                              "additionalProperties": false
                                            }
                                          ]
                                        }
                                      },
                                      "applicationDidBecomeActive": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "open": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "supportedInterfaceOrientationsFor": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didReceiveRemoteNotification": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didFailToRegisterForRemoteNotificationsWithError": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didReceive": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didRegister": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didRegisterForRemoteNotificationsWithDeviceToken": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "continue": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didConnectCarInterfaceController": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didDisconnectCarInterfaceController": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "userNotificationCenter": {
                                    "type": "object",
                                    "properties": {
                                      "willPresent": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      },
                                      "didReceiveNotificationResponse": {
                                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode/properties/AppDelegate_mm/properties/appDelegateMethods/properties/application/properties/didFinishLaunchingWithOptions"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "custom": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "appDelegateImports": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "AppDelegate_h": {
                            "type": "object",
                            "properties": {
                              "appDelegateImports": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "appDelegateExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "appDelegateMethods": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "Info_plist": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "ignoreWarnings": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings",
                  "description": "Injects `inhibit_all_warnings` into Podfile"
                },
                "ignoreLogs": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs",
                  "description": "Passes `-quiet` to xcodebuild command"
                },
                "deploymentTarget": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget",
                  "description": "Deployment target for xcodepoj"
                },
                "orientationSupport": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
                },
                "teamID": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID",
                  "description": "Apple teamID"
                },
                "excludedArchs": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs",
                  "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
                },
                "urlScheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme",
                  "description": "URL Scheme for the app used for deeplinking"
                },
                "teamIdentifier": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier",
                  "description": "Apple developer team ID"
                },
                "scheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
                },
                "schemeTarget": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
                },
                "appleId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
                },
                "provisioningStyle": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
                },
                "newArchEnabled": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
                  "description": "Enables new archs for iOS. Default: false"
                },
                "codeSignIdentity": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity",
                  "description": "Special property which tells Xcode how to build your project"
                },
                "commandLineArguments": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments",
                  "description": "Allows you to pass launch arguments to active scheme"
                },
                "provisionProfileSpecifier": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
                },
                "provisionProfileSpecifiers": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
                },
                "allowProvisioningUpdates": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
                },
                "provisioningProfiles": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
                },
                "codeSignIdentities": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
                },
                "systemCapabilities": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
                },
                "entitlements": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
                },
                "runScheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
                },
                "sdk": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
                },
                "testFlightId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
                },
                "firebaseId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
                },
                "privacyManifests": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
                },
                "exportOptions": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
                },
                "reactNativeEngine": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
                  "description": "Allows you to define specific native render engine to be used"
                },
                "templateXcode": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode"
                }
              },
              "additionalProperties": false
            },
            "tvos": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios"
            },
            "tizen": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "package": {
                        "type": "string"
                      },
                      "certificateProfile": {
                        "type": "string"
                      },
                      "appName": {
                        "type": "string"
                      },
                      "timestampBuildFiles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "devServerHost": {
                        "type": "string"
                      },
                      "environment": {
                        "type": "string"
                      },
                      "webpackConfig": {
                        "type": "object",
                        "properties": {
                          "publicUrl": {
                            "type": "string"
                          },
                          "customScripts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allows you to inject custom script into html header"
                          },
                          "excludedPaths": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Allows to specify files or directories in the src folder that webpack should ignore when bundling code."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "package": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/package"
                },
                "certificateProfile": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/certificateProfile"
                },
                "appName": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/appName"
                },
                "timestampBuildFiles": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                },
                "devServerHost": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                },
                "environment": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                },
                "webpackConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                }
              },
              "additionalProperties": false
            },
            "tizenmobile": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen"
            },
            "tizenwatch": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen"
            },
            "webos": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "iconColor": {
                        "type": "string"
                      },
                      "timestampBuildFiles": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                      },
                      "devServerHost": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                      },
                      "environment": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                      },
                      "webpackConfig": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "iconColor": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/webos/properties/buildSchemes/additionalProperties/properties/iconColor"
                },
                "timestampBuildFiles": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                },
                "devServerHost": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                },
                "environment": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                },
                "webpackConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                }
              },
              "additionalProperties": false
            },
            "web": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "webpackConfig": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                      },
                      "pagesDir": {
                        "type": "string",
                        "description": "Custom pages directory used by nextjs. Use relative paths"
                      },
                      "outputDir": {
                        "type": "string",
                        "description": "Custom output directory used by nextjs equivalent to `npx next build` with custom outputDir. Use relative paths"
                      },
                      "exportDir": {
                        "type": "string",
                        "description": "Custom export directory used by nextjs equivalent to `npx next export --outdir <exportDir>`. Use relative paths"
                      },
                      "nextTranspileModules": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "timestampBuildFiles": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                      },
                      "devServerHost": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                      },
                      "environment": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "webpackConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                },
                "pagesDir": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/web/properties/buildSchemes/additionalProperties/properties/pagesDir",
                  "description": "Custom pages directory used by nextjs. Use relative paths"
                },
                "outputDir": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/web/properties/buildSchemes/additionalProperties/properties/outputDir",
                  "description": "Custom output directory used by nextjs equivalent to `npx next build` with custom outputDir. Use relative paths"
                },
                "exportDir": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/web/properties/buildSchemes/additionalProperties/properties/exportDir",
                  "description": "Custom export directory used by nextjs equivalent to `npx next export --outdir <exportDir>`. Use relative paths"
                },
                "nextTranspileModules": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/web/properties/buildSchemes/additionalProperties/properties/nextTranspileModules"
                },
                "timestampBuildFiles": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/timestampBuildFiles"
                },
                "devServerHost": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/devServerHost"
                },
                "environment": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/environment"
                }
              },
              "additionalProperties": false
            },
            "webtv": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/web"
            },
            "chromecast": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/web"
            },
            "kaios": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/web"
            },
            "macos": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "ignoreWarnings": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings"
                      },
                      "ignoreLogs": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs"
                      },
                      "deploymentTarget": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget"
                      },
                      "orientationSupport": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
                      },
                      "teamID": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID"
                      },
                      "excludedArchs": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs"
                      },
                      "urlScheme": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme"
                      },
                      "teamIdentifier": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier"
                      },
                      "scheme": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
                      },
                      "schemeTarget": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
                      },
                      "appleId": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
                      },
                      "provisioningStyle": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
                      },
                      "newArchEnabled": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled"
                      },
                      "codeSignIdentity": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity"
                      },
                      "commandLineArguments": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments"
                      },
                      "provisionProfileSpecifier": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
                      },
                      "provisionProfileSpecifiers": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
                      },
                      "allowProvisioningUpdates": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
                      },
                      "provisioningProfiles": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
                      },
                      "codeSignIdentities": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
                      },
                      "systemCapabilities": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
                      },
                      "entitlements": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
                      },
                      "runScheme": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
                      },
                      "sdk": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
                      },
                      "testFlightId": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
                      },
                      "firebaseId": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
                      },
                      "privacyManifests": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
                      },
                      "exportOptions": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
                      },
                      "reactNativeEngine": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                      },
                      "templateXcode": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode"
                      },
                      "electronConfig": {
                        "description": "Allows you to configure electron app as per https://www.electron.build/"
                      },
                      "BrowserWindow": {
                        "type": "object",
                        "properties": {
                          "width": {
                            "type": "number"
                          },
                          "height": {
                            "type": "number"
                          },
                          "webPreferences": {
                            "type": "object",
                            "properties": {
                              "devTools": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "devTools"
                            ],
                            "additionalProperties": false,
                            "description": "Extra web preferences of electron app"
                          }
                        },
                        "additionalProperties": false,
                        "description": "Allows you to configure electron wrapper app window"
                      },
                      "webpackConfig": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "ignoreWarnings": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreWarnings",
                  "description": "Injects `inhibit_all_warnings` into Podfile"
                },
                "ignoreLogs": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/ignoreLogs",
                  "description": "Passes `-quiet` to xcodebuild command"
                },
                "deploymentTarget": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/deploymentTarget",
                  "description": "Deployment target for xcodepoj"
                },
                "orientationSupport": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/orientationSupport"
                },
                "teamID": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamID",
                  "description": "Apple teamID"
                },
                "excludedArchs": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/excludedArchs",
                  "description": "Defines excluded architectures. This transforms to xcodeproj: `EXCLUDED_ARCHS=\"<VAL VAL ...>\"`"
                },
                "urlScheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/urlScheme",
                  "description": "URL Scheme for the app used for deeplinking"
                },
                "teamIdentifier": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/teamIdentifier",
                  "description": "Apple developer team ID"
                },
                "scheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/scheme"
                },
                "schemeTarget": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/schemeTarget"
                },
                "appleId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/appleId"
                },
                "provisioningStyle": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningStyle"
                },
                "newArchEnabled": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/newArchEnabled",
                  "description": "Enables new archs for iOS. Default: false"
                },
                "codeSignIdentity": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentity",
                  "description": "Special property which tells Xcode how to build your project"
                },
                "commandLineArguments": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/commandLineArguments",
                  "description": "Allows you to pass launch arguments to active scheme"
                },
                "provisionProfileSpecifier": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifier"
                },
                "provisionProfileSpecifiers": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisionProfileSpecifiers"
                },
                "allowProvisioningUpdates": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/allowProvisioningUpdates"
                },
                "provisioningProfiles": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/provisioningProfiles"
                },
                "codeSignIdentities": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/codeSignIdentities"
                },
                "systemCapabilities": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/systemCapabilities"
                },
                "entitlements": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/entitlements"
                },
                "runScheme": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/runScheme"
                },
                "sdk": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/sdk"
                },
                "testFlightId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/testFlightId"
                },
                "firebaseId": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/firebaseId"
                },
                "privacyManifests": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/privacyManifests"
                },
                "exportOptions": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/exportOptions"
                },
                "reactNativeEngine": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
                  "description": "Allows you to define specific native render engine to be used"
                },
                "templateXcode": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode"
                },
                "electronConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig",
                  "description": "Allows you to configure electron app as per https://www.electron.build/"
                },
                "BrowserWindow": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow",
                  "description": "Allows you to configure electron wrapper app window"
                },
                "webpackConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                }
              },
              "additionalProperties": false
            },
            "linux": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/web"
            },
            "windows": {
              "type": "object",
              "properties": {
                "buildSchemes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "includedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions"
                      },
                      "excludedPermissions": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions"
                      },
                      "id": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/id"
                      },
                      "idSuffix": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                      },
                      "version": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/version"
                      },
                      "versionCode": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode"
                      },
                      "versionFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat"
                      },
                      "versionCodeFormat": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat"
                      },
                      "versionCodeOffset": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                      },
                      "title": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/title"
                      },
                      "description": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/description"
                      },
                      "author": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/author"
                      },
                      "license": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/license"
                      },
                      "includedFonts": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts"
                      },
                      "backgroundColor": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor"
                      },
                      "splashScreen": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen"
                      },
                      "fontSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources"
                      },
                      "assetSources": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources"
                      },
                      "includedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins"
                      },
                      "excludedPlugins": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins"
                      },
                      "runtime": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                      },
                      "custom": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                      },
                      "extendPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                      },
                      "assetFolderPlatform": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform"
                      },
                      "engine": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine"
                      },
                      "entryFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile"
                      },
                      "bundleAssets": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets"
                      },
                      "enableSourceMaps": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps"
                      },
                      "bundleIsDev": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev"
                      },
                      "getJsBundleFile": {
                        "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                      },
                      "electronConfig": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig"
                      },
                      "BrowserWindow": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow"
                      },
                      "reactNativeEngine": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine"
                      },
                      "templateVSProject": {
                        "type": "object",
                        "properties": {
                          "language": {
                            "type": "string",
                            "description": "Specify generated project language: cpp for C++ or cs for C#"
                          },
                          "arch": {
                            "type": "string",
                            "description": "Specification of targeted architecture"
                          },
                          "experimentalNuGetDependency": {
                            "type": "boolean"
                          },
                          "useWinUI3": {
                            "type": "boolean"
                          },
                          "nuGetTestVersion": {
                            "type": "string"
                          },
                          "reactNativeEngine": {
                            "type": "string"
                          },
                          "nuGetTestFeed": {
                            "type": "string"
                          },
                          "overwrite": {
                            "type": "boolean",
                            "description": "Whether to attempt to override the existing builds files when running a build once more"
                          },
                          "release": {
                            "type": "boolean",
                            "description": "Enables full packaging of the app for release"
                          },
                          "root": {
                            "type": "string",
                            "description": "Project root folder location (not the app itself, which is in platformBuilds)"
                          },
                          "singleproc": {
                            "type": "boolean",
                            "description": "Opt out of multi-proc builds (only available in 0.64 and newer versions of react-native-windows)"
                          },
                          "emulator": {
                            "type": "boolean"
                          },
                          "device": {
                            "type": "boolean"
                          },
                          "target": {
                            "type": "string"
                          },
                          "remoteDebugging": {
                            "type": "boolean"
                          },
                          "logging": {
                            "type": "boolean",
                            "description": "Logging all the build proccesses to console"
                          },
                          "packager": {
                            "type": "boolean"
                          },
                          "bundle": {
                            "type": "boolean"
                          },
                          "launch": {
                            "type": "boolean",
                            "description": "Launches the application once the build process is finished"
                          },
                          "autolink": {
                            "type": "boolean",
                            "description": "Launches the application once the build process is finished"
                          },
                          "build": {
                            "type": "boolean",
                            "description": "Builds the application before launching it"
                          },
                          "sln": {
                            "type": "string",
                            "description": "Location of Visual Studio solution .sln file (wraps multiple projects)"
                          },
                          "proj": {
                            "type": "string",
                            "description": "Root project directory for your React Native Windows project (not Visual Studio project)"
                          },
                          "appPath": {
                            "type": "string",
                            "description": "Full path to windows plaform build directory"
                          },
                          "msbuildprops": {
                            "type": "string",
                            "description": "Comma separated props to pass to msbuild, eg: prop1=value1,prop2=value2"
                          },
                          "buildLogDirectory": {
                            "type": "string",
                            "description": "Full path to directory where builds logs should be stored, default - project path"
                          },
                          "info": {
                            "type": "boolean",
                            "description": "Print information about the build machine to console"
                          },
                          "directDebugging": {
                            "type": "boolean"
                          },
                          "telemetry": {
                            "type": "boolean",
                            "description": "Send analytics data of @react-native-windows/cli usage to Microsoft"
                          },
                          "devPort": {
                            "type": "string"
                          },
                          "additionalMetroOptions": {
                            "type": "object",
                            "additionalProperties": {}
                          },
                          "packageExtension": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "webpackConfig": {
                        "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "includedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPermissions",
                  "description": "Allows you to include specific permissions by their KEY defined in `permissions` object. Use: `['*']` to include all"
                },
                "excludedPermissions": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPermissions",
                  "description": "Allows you to exclude specific permissions by their KEY defined in `permissions` object. Use: `['*']` to exclude all"
                },
                "id": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/id",
                  "description": "Bundle ID of application. ie: com.example.myapp"
                },
                "idSuffix": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/idSuffix"
                },
                "version": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/version",
                  "description": "Semver style version of your app"
                },
                "versionCode": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCode",
                  "description": "Manual verride of generated version code"
                },
                "versionFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionFormat",
                  "description": "Allows you to fine-tune app version defined in package.json or renative.json.\n    If you do not define versionFormat, no formatting will apply to version.\n    "
                },
                "versionCodeFormat": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeFormat",
                  "description": "Allows you to fine-tune auto generated version codes.\n    Version code is autogenerated from app version defined in package.json or renative.json.\n    "
                },
                "versionCodeOffset": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/versionCodeOffset"
                },
                "title": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/title",
                  "description": "Title of your app will be used to create title of the binary. ie App title of installed app iOS/Android app or Tab title of the website"
                },
                "description": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/description",
                  "description": "General description of your app. This prop will be injected to actual projects where description field is applicable"
                },
                "author": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/author",
                  "description": "Author name"
                },
                "license": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/license",
                  "description": "Injects license information into app"
                },
                "includedFonts": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedFonts",
                  "description": "Array of fonts you want to include in specific app or scheme. Should use exact font file (without the extension) located in `./appConfigs/base/fonts` or `*` to mark all"
                },
                "backgroundColor": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/backgroundColor",
                  "description": "Defines root view backgroundColor for all platforms in HEX format"
                },
                "splashScreen": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/splashScreen",
                  "description": "Enable or disable splash screen"
                },
                "fontSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/fontSources",
                  "description": "Array of paths to location of external Fonts. you can use resolve function here example: `{{resolvePackage(react-native-vector-icons)}}/Fonts`"
                },
                "assetSources": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/assetSources",
                  "description": "Array of paths to alternative external assets. this will take priority over ./appConfigs/base/assets folder on your local project. You can use resolve function here example: `{{resolvePackage(@flexn/template-starter)}}/appConfigs/base/assets`"
                },
                "includedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/includedPlugins",
                  "description": "Defines an array of all included plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: includedPlugins is evaluated before excludedPlugins. Use: `['*']` to include all"
                },
                "excludedPlugins": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/excludedPlugins",
                  "description": "Defines an array of all excluded plugins for specific config or buildScheme. only full keys as defined in `plugin` should be used.\n\nNOTE: excludedPlugins is evaluated after includedPlugins. Use: `['*']` to exclude all"
                },
                "runtime": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/runtime"
                },
                "custom": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/custom"
                },
                "extendPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                },
                "assetFolderPlatform": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/assetFolderPlatform",
                  "description": "Alternative platform assets. This is useful for example when you want to use same android assets in androidtv and want to avoid duplicating assets"
                },
                "engine": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/engine",
                  "description": "ID of engine to be used for this platform. Note: engine must be registered in `engines` field"
                },
                "entryFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/entryFile",
                  "description": "Alternative name of the entry file without `.js` extension"
                },
                "bundleAssets": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleAssets",
                  "description": "If set to `true` compiled js bundle file will generated. this is needed if you want to make production like builds"
                },
                "enableSourceMaps": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/enableSourceMaps",
                  "description": "If set to `true` dedicated source map file will be generated alongside of compiled js bundle"
                },
                "bundleIsDev": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/bundleIsDev",
                  "description": "If set to `true` debug build will be generated"
                },
                "getJsBundleFile": {
                  "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/getJsBundleFile"
                },
                "electronConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/electronConfig",
                  "description": "Allows you to configure electron app as per https://www.electron.build/"
                },
                "BrowserWindow": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/macos/properties/buildSchemes/additionalProperties/properties/BrowserWindow",
                  "description": "Allows you to configure electron wrapper app window"
                },
                "reactNativeEngine": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/reactNativeEngine",
                  "description": "Allows you to define specific native render engine to be used"
                },
                "templateVSProject": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/windows/properties/buildSchemes/additionalProperties/properties/templateVSProject"
                },
                "webpackConfig": {
                  "$ref": "#/definitions/rnv.app/properties/platforms/properties/tizen/properties/buildSchemes/additionalProperties/properties/webpackConfig"
                }
              },
              "additionalProperties": false
            },
            "xbox": {
              "$ref": "#/definitions/rnv.app/properties/platforms/properties/windows"
            }
          },
          "additionalProperties": false,
          "description": "Object containing platform configurations"
        },
        "plugins": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "supportedPlatforms": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/rnv.app/properties/common/properties/buildSchemes/additionalProperties/properties/extendPlatform"
                        },
                        "description": "Array list of platforms for which the current plugin is supported"
                      },
                      "disabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "Marks plugin disabled"
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Custom props passed to plugin"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of plugin. Typically package version"
                      },
                      "deprecated": {
                        "type": "string",
                        "description": "Marks your plugin deprecated with warning showing in the console during rnv commands"
                      },
                      "source": {
                        "type": "string",
                        "description": "Will define custom scope for your plugin config to extend from.\n\nNOTE: custom scopes can be defined via paths.pluginTemplates.[CUSTOM_SCOPE].{}"
                      },
                      "disableNpm": {
                        "type": "boolean",
                        "description": "Will skip including plugin in package.json and installing it via npm/yarn etc"
                      },
                      "skipMerge": {
                        "type": "boolean",
                        "description": "Will not attempt to merge with existing plugin configuration (ie. coming form renative pluginTemplates)\n\nNOTE: if set to `true` you need to configure your plugin object fully"
                      },
                      "npm": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Object of npm dependencies of this plugin. These will be injected into package.json"
                      },
                      "pluginDependencies": {
                        "anyOf": [
                          {
                            "type": "object",
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "List of other Renative plugins this plugin depends on"
                      },
                      "webpackConfig": {
                        "type": "object",
                        "properties": {
                          "modulePaths": {
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ]
                          },
                          "moduleAliases": {
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "projectPath": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "projectPath"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "nextTranspileModules": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "description": "Allows you to configure webpack bahaviour per each individual plugin"
                      },
                      "disablePluginTemplateOverrides": {
                        "type": "boolean",
                        "description": "Disables plugin overrides for selected plugin"
                      },
                      "fontSources": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "android": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "extendPlatform": {
                                "type": "string",
                                "enum": [
                                  "web",
                                  "ios",
                                  "android",
                                  "androidtv",
                                  "firetv",
                                  "tvos",
                                  "macos",
                                  "linux",
                                  "windows",
                                  "tizen",
                                  "webos",
                                  "chromecast",
                                  "kaios",
                                  "webtv",
                                  "androidwear",
                                  "tizenwatch",
                                  "tizenmobile",
                                  "xbox"
                                ],
                                "description": "Extends platform configuration from another platform"
                              },
                              "disabled": {
                                "type": "boolean",
                                "default": false,
                                "description": "Marks plugin platform disabled"
                              },
                              "forceLinking": {
                                "type": "boolean",
                                "default": false,
                                "description": "Packages that cannot be autolinked yet can still be added to MainApplication PackageList dynamically by setting this to true"
                              },
                              "path": {
                                "type": "string",
                                "description": "Enables you to pass custom path to plugin. If undefined, the default `node_modules/[plugin-name]` will be used."
                              },
                              "templateAndroid": {
                                "$ref": "#/definitions/rnv.app/properties/platforms/properties/android/properties/buildSchemes/additionalProperties/properties/templateAndroid"
                              },
                              "projectName": {
                                "type": "string"
                              },
                              "skipLinking": {
                                "type": "boolean"
                              },
                              "skipImplementation": {
                                "type": "boolean"
                              },
                              "implementation": {
                                "type": "string"
                              },
                              "package": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "androidtv": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android"
                      },
                      "androidwear": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android"
                      },
                      "firetv": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android"
                      },
                      "ios": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "extendPlatform": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/extendPlatform"
                              },
                              "disabled": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/disabled"
                              },
                              "forceLinking": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/forceLinking"
                              },
                              "path": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/path"
                              },
                              "templateXcode": {
                                "$ref": "#/definitions/rnv.app/properties/platforms/properties/ios/properties/buildSchemes/additionalProperties/properties/templateXcode"
                              },
                              "git": {
                                "type": "string",
                                "description": "Alternative git url for pod instead of version"
                              },
                              "commit": {
                                "type": "string",
                                "description": "Alternative git commit reference string"
                              },
                              "version": {
                                "type": "string",
                                "description": "Version of pod"
                              },
                              "podNames": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podName": {
                                "type": "string"
                              },
                              "staticFrameworks": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "isStatic": {
                                "type": "boolean"
                              },
                              "buildType": {
                                "type": "string",
                                "enum": [
                                  "dynamic",
                                  "static"
                                ],
                                "description": "Build type of the pod"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "tvos": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios"
                      },
                      "tizen": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "extendPlatform": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/extendPlatform"
                              },
                              "disabled": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/disabled"
                              },
                              "forceLinking": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/forceLinking"
                              },
                              "path": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/path"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "tizenmobile": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "tizenwatch": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "webos": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "web": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "webtv": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "chromecast": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "kaios": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "macos": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "extendPlatform": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/extendPlatform"
                              },
                              "disabled": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/disabled"
                              },
                              "forceLinking": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/forceLinking"
                              },
                              "path": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/android/anyOf/0/properties/path"
                              },
                              "templateXcode": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/templateXcode"
                              },
                              "git": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/git"
                              },
                              "commit": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/commit"
                              },
                              "version": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/version"
                              },
                              "podNames": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/podNames"
                              },
                              "podName": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/podName"
                              },
                              "staticFrameworks": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/staticFrameworks"
                              },
                              "isStatic": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/isStatic"
                              },
                              "buildType": {
                                "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/ios/anyOf/0/properties/buildType"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "linux": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "windows": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      },
                      "xbox": {
                        "$ref": "#/definitions/rnv.app/properties/plugins/additionalProperties/anyOf/0/anyOf/0/properties/tizen"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "description": "Define all plugins available in your project. you can then use `includedPlugins` and `excludedPlugins` props to define active and inactive plugins per each app config"
        },
        "$schema": {
          "type": "string",
          "description": "schema definition"
        }
      },
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#"
}